// Code generated by protoc-gen-go. DO NOT EDIT.
// source: btcrpc.proto

package btcrpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BlockNotification_Type int32

const (
	BlockNotification_CONNECTED    BlockNotification_Type = 0
	BlockNotification_DISCONNECTED BlockNotification_Type = 1
)

var BlockNotification_Type_name = map[int32]string{
	0: "CONNECTED",
	1: "DISCONNECTED",
}
var BlockNotification_Type_value = map[string]int32{
	"CONNECTED":    0,
	"DISCONNECTED": 1,
}

func (x BlockNotification_Type) String() string {
	return proto.EnumName(BlockNotification_Type_name, int32(x))
}
func (BlockNotification_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{7, 0}
}

type TransactionNotification_Type int32

const (
	TransactionNotification_ACCEPTED  TransactionNotification_Type = 0
	TransactionNotification_CONFIRMED TransactionNotification_Type = 1
)

var TransactionNotification_Type_name = map[int32]string{
	0: "ACCEPTED",
	1: "CONFIRMED",
}
var TransactionNotification_Type_value = map[string]int32{
	"ACCEPTED":  0,
	"CONFIRMED": 1,
}

func (x TransactionNotification_Type) String() string {
	return proto.EnumName(TransactionNotification_Type_name, int32(x))
}
func (TransactionNotification_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{9, 0}
}

type GetNetworkInfoResponse_BitcoinNet int32

const (
	GetNetworkInfoResponse_MAINNET  GetNetworkInfoResponse_BitcoinNet = 0
	GetNetworkInfoResponse_TESTNET  GetNetworkInfoResponse_BitcoinNet = 1
	GetNetworkInfoResponse_TESTNET3 GetNetworkInfoResponse_BitcoinNet = 2
	GetNetworkInfoResponse_SIMNET   GetNetworkInfoResponse_BitcoinNet = 3
)

var GetNetworkInfoResponse_BitcoinNet_name = map[int32]string{
	0: "MAINNET",
	1: "TESTNET",
	2: "TESTNET3",
	3: "SIMNET",
}
var GetNetworkInfoResponse_BitcoinNet_value = map[string]int32{
	"MAINNET":  0,
	"TESTNET":  1,
	"TESTNET3": 2,
	"SIMNET":   3,
}

func (x GetNetworkInfoResponse_BitcoinNet) String() string {
	return proto.EnumName(GetNetworkInfoResponse_BitcoinNet_name, int32(x))
}
func (GetNetworkInfoResponse_BitcoinNet) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{40, 0}
}

type SetDebugLevelRequest_DebugLevel int32

const (
	SetDebugLevelRequest_TRACE    SetDebugLevelRequest_DebugLevel = 0
	SetDebugLevelRequest_DEBUG    SetDebugLevelRequest_DebugLevel = 1
	SetDebugLevelRequest_INFO     SetDebugLevelRequest_DebugLevel = 2
	SetDebugLevelRequest_WARN     SetDebugLevelRequest_DebugLevel = 3
	SetDebugLevelRequest_ERROR    SetDebugLevelRequest_DebugLevel = 4
	SetDebugLevelRequest_CRITICAL SetDebugLevelRequest_DebugLevel = 5
)

var SetDebugLevelRequest_DebugLevel_name = map[int32]string{
	0: "TRACE",
	1: "DEBUG",
	2: "INFO",
	3: "WARN",
	4: "ERROR",
	5: "CRITICAL",
}
var SetDebugLevelRequest_DebugLevel_value = map[string]int32{
	"TRACE":    0,
	"DEBUG":    1,
	"INFO":     2,
	"WARN":     3,
	"ERROR":    4,
	"CRITICAL": 5,
}

func (x SetDebugLevelRequest_DebugLevel) String() string {
	return proto.EnumName(SetDebugLevelRequest_DebugLevel_name, int32(x))
}
func (SetDebugLevelRequest_DebugLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{60, 0}
}

type SetDebugLevelRequest_Subsystem int32

const (
	SetDebugLevelRequest_ALL  SetDebugLevelRequest_Subsystem = 0
	SetDebugLevelRequest_ADXR SetDebugLevelRequest_Subsystem = 1
	SetDebugLevelRequest_AMGR SetDebugLevelRequest_Subsystem = 2
	SetDebugLevelRequest_CMGR SetDebugLevelRequest_Subsystem = 3
	SetDebugLevelRequest_BCDB SetDebugLevelRequest_Subsystem = 4
	SetDebugLevelRequest_BTCD SetDebugLevelRequest_Subsystem = 5
	SetDebugLevelRequest_CHAN SetDebugLevelRequest_Subsystem = 6
	SetDebugLevelRequest_DISC SetDebugLevelRequest_Subsystem = 7
	SetDebugLevelRequest_INDX SetDebugLevelRequest_Subsystem = 8
	SetDebugLevelRequest_MINR SetDebugLevelRequest_Subsystem = 9
	SetDebugLevelRequest_PEER SetDebugLevelRequest_Subsystem = 10
	SetDebugLevelRequest_RPCS SetDebugLevelRequest_Subsystem = 11
	SetDebugLevelRequest_SCRP SetDebugLevelRequest_Subsystem = 12
	SetDebugLevelRequest_SRVR SetDebugLevelRequest_Subsystem = 13
	SetDebugLevelRequest_SYNC SetDebugLevelRequest_Subsystem = 14
	SetDebugLevelRequest_TXMP SetDebugLevelRequest_Subsystem = 15
)

var SetDebugLevelRequest_Subsystem_name = map[int32]string{
	0:  "ALL",
	1:  "ADXR",
	2:  "AMGR",
	3:  "CMGR",
	4:  "BCDB",
	5:  "BTCD",
	6:  "CHAN",
	7:  "DISC",
	8:  "INDX",
	9:  "MINR",
	10: "PEER",
	11: "RPCS",
	12: "SCRP",
	13: "SRVR",
	14: "SYNC",
	15: "TXMP",
}
var SetDebugLevelRequest_Subsystem_value = map[string]int32{
	"ALL":  0,
	"ADXR": 1,
	"AMGR": 2,
	"CMGR": 3,
	"BCDB": 4,
	"BTCD": 5,
	"CHAN": 6,
	"DISC": 7,
	"INDX": 8,
	"MINR": 9,
	"PEER": 10,
	"RPCS": 11,
	"SCRP": 12,
	"SRVR": 13,
	"SYNC": 14,
	"TXMP": 15,
}

func (x SetDebugLevelRequest_Subsystem) String() string {
	return proto.EnumName(SetDebugLevelRequest_Subsystem_name, int32(x))
}
func (SetDebugLevelRequest_Subsystem) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{60, 1}
}

type Block struct {
	Info *BlockInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	// Either one of the two following is provided, depending on the request.
	TransactionHashes    [][]byte       `protobuf:"bytes,2,rep,name=transaction_hashes,json=transactionHashes,proto3" json:"transaction_hashes,omitempty"`
	Transactions         []*Transaction `protobuf:"bytes,3,rep,name=transactions" json:"transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{0}
}
func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (dst *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(dst, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetInfo() *BlockInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Block) GetTransactionHashes() [][]byte {
	if m != nil {
		return m.TransactionHashes
	}
	return nil
}

func (m *Block) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type BlockInfo struct {
	// Identification.
	Hash   []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Height int32  `protobuf:"varint,2,opt,name=height" json:"height,omitempty"`
	// Block header data.
	Version       int32  `protobuf:"varint,3,opt,name=version" json:"version,omitempty"`
	PreviousBlock []byte `protobuf:"bytes,4,opt,name=previous_block,json=previousBlock,proto3" json:"previous_block,omitempty"`
	MerkleRoot    []byte `protobuf:"bytes,5,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	Time          int64  `protobuf:"varint,6,opt,name=time" json:"time,omitempty"`
	Bits          uint32 `protobuf:"varint,7,opt,name=bits" json:"bits,omitempty"`
	Nonce         uint32 `protobuf:"varint,8,opt,name=nonce" json:"nonce,omitempty"`
	// Metadata.
	Confirmations        int32    `protobuf:"varint,9,opt,name=confirmations" json:"confirmations,omitempty"`
	Difficulty           float64  `protobuf:"fixed64,10,opt,name=difficulty" json:"difficulty,omitempty"`
	NextBlockHash        []byte   `protobuf:"bytes,11,opt,name=next_block_hash,json=nextBlockHash,proto3" json:"next_block_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockInfo) Reset()         { *m = BlockInfo{} }
func (m *BlockInfo) String() string { return proto.CompactTextString(m) }
func (*BlockInfo) ProtoMessage()    {}
func (*BlockInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{1}
}
func (m *BlockInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockInfo.Unmarshal(m, b)
}
func (m *BlockInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockInfo.Marshal(b, m, deterministic)
}
func (dst *BlockInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockInfo.Merge(dst, src)
}
func (m *BlockInfo) XXX_Size() int {
	return xxx_messageInfo_BlockInfo.Size(m)
}
func (m *BlockInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BlockInfo proto.InternalMessageInfo

func (m *BlockInfo) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *BlockInfo) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BlockInfo) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *BlockInfo) GetPreviousBlock() []byte {
	if m != nil {
		return m.PreviousBlock
	}
	return nil
}

func (m *BlockInfo) GetMerkleRoot() []byte {
	if m != nil {
		return m.MerkleRoot
	}
	return nil
}

func (m *BlockInfo) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *BlockInfo) GetBits() uint32 {
	if m != nil {
		return m.Bits
	}
	return 0
}

func (m *BlockInfo) GetNonce() uint32 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *BlockInfo) GetConfirmations() int32 {
	if m != nil {
		return m.Confirmations
	}
	return 0
}

func (m *BlockInfo) GetDifficulty() float64 {
	if m != nil {
		return m.Difficulty
	}
	return 0
}

func (m *BlockInfo) GetNextBlockHash() []byte {
	if m != nil {
		return m.NextBlockHash
	}
	return nil
}

// BlockLocator identifies a block.  Provide EITHER hash or height.
type BlockLocator struct {
	// Types that are valid to be assigned to Locator:
	//	*BlockLocator_Hash
	//	*BlockLocator_Height
	Locator              isBlockLocator_Locator `protobuf_oneof:"locator"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *BlockLocator) Reset()         { *m = BlockLocator{} }
func (m *BlockLocator) String() string { return proto.CompactTextString(m) }
func (*BlockLocator) ProtoMessage()    {}
func (*BlockLocator) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{2}
}
func (m *BlockLocator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockLocator.Unmarshal(m, b)
}
func (m *BlockLocator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockLocator.Marshal(b, m, deterministic)
}
func (dst *BlockLocator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockLocator.Merge(dst, src)
}
func (m *BlockLocator) XXX_Size() int {
	return xxx_messageInfo_BlockLocator.Size(m)
}
func (m *BlockLocator) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockLocator.DiscardUnknown(m)
}

var xxx_messageInfo_BlockLocator proto.InternalMessageInfo

type isBlockLocator_Locator interface {
	isBlockLocator_Locator()
}

type BlockLocator_Hash struct {
	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3,oneof"`
}
type BlockLocator_Height struct {
	Height int32 `protobuf:"varint,2,opt,name=height,oneof"`
}

func (*BlockLocator_Hash) isBlockLocator_Locator()   {}
func (*BlockLocator_Height) isBlockLocator_Locator() {}

func (m *BlockLocator) GetLocator() isBlockLocator_Locator {
	if m != nil {
		return m.Locator
	}
	return nil
}

func (m *BlockLocator) GetHash() []byte {
	if x, ok := m.GetLocator().(*BlockLocator_Hash); ok {
		return x.Hash
	}
	return nil
}

func (m *BlockLocator) GetHeight() int32 {
	if x, ok := m.GetLocator().(*BlockLocator_Height); ok {
		return x.Height
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*BlockLocator) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _BlockLocator_OneofMarshaler, _BlockLocator_OneofUnmarshaler, _BlockLocator_OneofSizer, []interface{}{
		(*BlockLocator_Hash)(nil),
		(*BlockLocator_Height)(nil),
	}
}

func _BlockLocator_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*BlockLocator)
	// locator
	switch x := m.Locator.(type) {
	case *BlockLocator_Hash:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Hash)
	case *BlockLocator_Height:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Height))
	case nil:
	default:
		return fmt.Errorf("BlockLocator.Locator has unexpected type %T", x)
	}
	return nil
}

func _BlockLocator_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*BlockLocator)
	switch tag {
	case 1: // locator.hash
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Locator = &BlockLocator_Hash{x}
		return true, err
	case 2: // locator.height
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Locator = &BlockLocator_Height{int32(x)}
		return true, err
	default:
		return false, nil
	}
}

func _BlockLocator_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*BlockLocator)
	// locator
	switch x := m.Locator.(type) {
	case *BlockLocator_Hash:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Hash)))
		n += len(x.Hash)
	case *BlockLocator_Height:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Height))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// TODO(stevenroose) is it worth it to expose this??
type MempoolTransaction struct {
	Transaction *Transaction `protobuf:"bytes,1,opt,name=transaction" json:"transaction,omitempty"`
	// The time when the transaction was added too the pool.
	AddedTime int64 `protobuf:"varint,2,opt,name=added_time,json=addedTime" json:"added_time,omitempty"`
	// The block height when the transaction was added to the pool.
	AddedHeight int32 `protobuf:"varint,3,opt,name=added_height,json=addedHeight" json:"added_height,omitempty"`
	// The total fee in satoshi the transaction pays.
	Fee int64 `protobuf:"varint,4,opt,name=fee" json:"fee,omitempty"`
	// The fee in satoshi per byte the transaction pays.
	FeePerByte int64 `protobuf:"varint,5,opt,name=fee_per_byte,json=feePerByte" json:"fee_per_byte,omitempty"`
	// The priority of the transaction when it was added to the pool.
	StartingPriority     float64  `protobuf:"fixed64,6,opt,name=starting_priority,json=startingPriority" json:"starting_priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MempoolTransaction) Reset()         { *m = MempoolTransaction{} }
func (m *MempoolTransaction) String() string { return proto.CompactTextString(m) }
func (*MempoolTransaction) ProtoMessage()    {}
func (*MempoolTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{3}
}
func (m *MempoolTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MempoolTransaction.Unmarshal(m, b)
}
func (m *MempoolTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MempoolTransaction.Marshal(b, m, deterministic)
}
func (dst *MempoolTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MempoolTransaction.Merge(dst, src)
}
func (m *MempoolTransaction) XXX_Size() int {
	return xxx_messageInfo_MempoolTransaction.Size(m)
}
func (m *MempoolTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_MempoolTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_MempoolTransaction proto.InternalMessageInfo

func (m *MempoolTransaction) GetTransaction() *Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *MempoolTransaction) GetAddedTime() int64 {
	if m != nil {
		return m.AddedTime
	}
	return 0
}

func (m *MempoolTransaction) GetAddedHeight() int32 {
	if m != nil {
		return m.AddedHeight
	}
	return 0
}

func (m *MempoolTransaction) GetFee() int64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *MempoolTransaction) GetFeePerByte() int64 {
	if m != nil {
		return m.FeePerByte
	}
	return 0
}

func (m *MempoolTransaction) GetStartingPriority() float64 {
	if m != nil {
		return m.StartingPriority
	}
	return 0
}

type Transaction struct {
	Hash     []byte                `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Version  int32                 `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
	Inputs   []*Transaction_Input  `protobuf:"bytes,3,rep,name=inputs" json:"inputs,omitempty"`
	Outputs  []*Transaction_Output `protobuf:"bytes,4,rep,name=outputs" json:"outputs,omitempty"`
	LockTime uint32                `protobuf:"varint,5,opt,name=lock_time,json=lockTime" json:"lock_time,omitempty"`
	// Witness data.
	HasWitness  bool   `protobuf:"varint,6,opt,name=has_witness,json=hasWitness" json:"has_witness,omitempty"`
	WitnessHash []byte `protobuf:"bytes,7,opt,name=witness_hash,json=witnessHash,proto3" json:"witness_hash,omitempty"`
	// Metadata
	Time                 int64    `protobuf:"varint,8,opt,name=time" json:"time,omitempty"`
	Confirmations        int32    `protobuf:"varint,9,opt,name=confirmations" json:"confirmations,omitempty"`
	BlockHeight          int32    `protobuf:"varint,10,opt,name=block_height,json=blockHeight" json:"block_height,omitempty"`
	BlockHash            []byte   `protobuf:"bytes,11,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{4}
}
func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (dst *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(dst, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Transaction) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Transaction) GetInputs() []*Transaction_Input {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *Transaction) GetOutputs() []*Transaction_Output {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *Transaction) GetLockTime() uint32 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

func (m *Transaction) GetHasWitness() bool {
	if m != nil {
		return m.HasWitness
	}
	return false
}

func (m *Transaction) GetWitnessHash() []byte {
	if m != nil {
		return m.WitnessHash
	}
	return nil
}

func (m *Transaction) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Transaction) GetConfirmations() int32 {
	if m != nil {
		return m.Confirmations
	}
	return 0
}

func (m *Transaction) GetBlockHeight() int32 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *Transaction) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

type Transaction_Input struct {
	Coinbase        bool                        `protobuf:"varint,1,opt,name=coinbase" json:"coinbase,omitempty"`
	Outpoint        *Transaction_Input_Outpoint `protobuf:"bytes,2,opt,name=outpoint" json:"outpoint,omitempty"`
	SignatureScript []byte                      `protobuf:"bytes,3,opt,name=signature_script,json=signatureScript,proto3" json:"signature_script,omitempty"`
	Sequence        uint32                      `protobuf:"varint,4,opt,name=sequence" json:"sequence,omitempty"`
	WitnessData     [][]byte                    `protobuf:"bytes,5,rep,name=witness_data,json=witnessData,proto3" json:"witness_data,omitempty"`
	// TODO(stevenroose) can we provide these always?
	//  (they are provided in the jsonrpc searchrawtransactions call)
	Value                int64    `protobuf:"varint,6,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction_Input) Reset()         { *m = Transaction_Input{} }
func (m *Transaction_Input) String() string { return proto.CompactTextString(m) }
func (*Transaction_Input) ProtoMessage()    {}
func (*Transaction_Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{4, 0}
}
func (m *Transaction_Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction_Input.Unmarshal(m, b)
}
func (m *Transaction_Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction_Input.Marshal(b, m, deterministic)
}
func (dst *Transaction_Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction_Input.Merge(dst, src)
}
func (m *Transaction_Input) XXX_Size() int {
	return xxx_messageInfo_Transaction_Input.Size(m)
}
func (m *Transaction_Input) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction_Input.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction_Input proto.InternalMessageInfo

func (m *Transaction_Input) GetCoinbase() bool {
	if m != nil {
		return m.Coinbase
	}
	return false
}

func (m *Transaction_Input) GetOutpoint() *Transaction_Input_Outpoint {
	if m != nil {
		return m.Outpoint
	}
	return nil
}

func (m *Transaction_Input) GetSignatureScript() []byte {
	if m != nil {
		return m.SignatureScript
	}
	return nil
}

func (m *Transaction_Input) GetSequence() uint32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *Transaction_Input) GetWitnessData() [][]byte {
	if m != nil {
		return m.WitnessData
	}
	return nil
}

func (m *Transaction_Input) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Transaction_Input_Outpoint struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Index                uint32   `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction_Input_Outpoint) Reset()         { *m = Transaction_Input_Outpoint{} }
func (m *Transaction_Input_Outpoint) String() string { return proto.CompactTextString(m) }
func (*Transaction_Input_Outpoint) ProtoMessage()    {}
func (*Transaction_Input_Outpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{4, 0, 0}
}
func (m *Transaction_Input_Outpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction_Input_Outpoint.Unmarshal(m, b)
}
func (m *Transaction_Input_Outpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction_Input_Outpoint.Marshal(b, m, deterministic)
}
func (dst *Transaction_Input_Outpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction_Input_Outpoint.Merge(dst, src)
}
func (m *Transaction_Input_Outpoint) XXX_Size() int {
	return xxx_messageInfo_Transaction_Input_Outpoint.Size(m)
}
func (m *Transaction_Input_Outpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction_Input_Outpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction_Input_Outpoint proto.InternalMessageInfo

func (m *Transaction_Input_Outpoint) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Transaction_Input_Outpoint) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type Transaction_Output struct {
	Index                uint32   `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Value                int64    `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	PubkeyScript         []byte   `protobuf:"bytes,3,opt,name=pubkey_script,json=pubkeyScript,proto3" json:"pubkey_script,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction_Output) Reset()         { *m = Transaction_Output{} }
func (m *Transaction_Output) String() string { return proto.CompactTextString(m) }
func (*Transaction_Output) ProtoMessage()    {}
func (*Transaction_Output) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{4, 1}
}
func (m *Transaction_Output) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction_Output.Unmarshal(m, b)
}
func (m *Transaction_Output) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction_Output.Marshal(b, m, deterministic)
}
func (dst *Transaction_Output) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction_Output.Merge(dst, src)
}
func (m *Transaction_Output) XXX_Size() int {
	return xxx_messageInfo_Transaction_Output.Size(m)
}
func (m *Transaction_Output) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction_Output.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction_Output proto.InternalMessageInfo

func (m *Transaction_Output) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Transaction_Output) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Transaction_Output) GetPubkeyScript() []byte {
	if m != nil {
		return m.PubkeyScript
	}
	return nil
}

type TransactionFilter struct {
	Addresses            []string                      `protobuf:"bytes,1,rep,name=addresses" json:"addresses,omitempty"`
	Outpoints            []*Transaction_Input_Outpoint `protobuf:"bytes,2,rep,name=outpoints" json:"outpoints,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *TransactionFilter) Reset()         { *m = TransactionFilter{} }
func (m *TransactionFilter) String() string { return proto.CompactTextString(m) }
func (*TransactionFilter) ProtoMessage()    {}
func (*TransactionFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{5}
}
func (m *TransactionFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionFilter.Unmarshal(m, b)
}
func (m *TransactionFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionFilter.Marshal(b, m, deterministic)
}
func (dst *TransactionFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionFilter.Merge(dst, src)
}
func (m *TransactionFilter) XXX_Size() int {
	return xxx_messageInfo_TransactionFilter.Size(m)
}
func (m *TransactionFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionFilter.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionFilter proto.InternalMessageInfo

func (m *TransactionFilter) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *TransactionFilter) GetOutpoints() []*Transaction_Input_Outpoint {
	if m != nil {
		return m.Outpoints
	}
	return nil
}

type UnspentOutput struct {
	Outpoint             *Transaction_Input_Outpoint `protobuf:"bytes,1,opt,name=outpoint" json:"outpoint,omitempty"`
	PubkeyScript         []byte                      `protobuf:"bytes,2,opt,name=pubkey_script,json=pubkeyScript,proto3" json:"pubkey_script,omitempty"`
	Value                int64                       `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
	IsCoinbase           bool                        `protobuf:"varint,4,opt,name=is_coinbase,json=isCoinbase" json:"is_coinbase,omitempty"`
	BlockHeight          int32                       `protobuf:"varint,5,opt,name=block_height,json=blockHeight" json:"block_height,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *UnspentOutput) Reset()         { *m = UnspentOutput{} }
func (m *UnspentOutput) String() string { return proto.CompactTextString(m) }
func (*UnspentOutput) ProtoMessage()    {}
func (*UnspentOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{6}
}
func (m *UnspentOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnspentOutput.Unmarshal(m, b)
}
func (m *UnspentOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnspentOutput.Marshal(b, m, deterministic)
}
func (dst *UnspentOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnspentOutput.Merge(dst, src)
}
func (m *UnspentOutput) XXX_Size() int {
	return xxx_messageInfo_UnspentOutput.Size(m)
}
func (m *UnspentOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_UnspentOutput.DiscardUnknown(m)
}

var xxx_messageInfo_UnspentOutput proto.InternalMessageInfo

func (m *UnspentOutput) GetOutpoint() *Transaction_Input_Outpoint {
	if m != nil {
		return m.Outpoint
	}
	return nil
}

func (m *UnspentOutput) GetPubkeyScript() []byte {
	if m != nil {
		return m.PubkeyScript
	}
	return nil
}

func (m *UnspentOutput) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *UnspentOutput) GetIsCoinbase() bool {
	if m != nil {
		return m.IsCoinbase
	}
	return false
}

func (m *UnspentOutput) GetBlockHeight() int32 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

type BlockNotification struct {
	Type                 BlockNotification_Type `protobuf:"varint,1,opt,name=type,enum=btcrpc.BlockNotification_Type" json:"type,omitempty"`
	Block                *BlockInfo             `protobuf:"bytes,2,opt,name=block" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *BlockNotification) Reset()         { *m = BlockNotification{} }
func (m *BlockNotification) String() string { return proto.CompactTextString(m) }
func (*BlockNotification) ProtoMessage()    {}
func (*BlockNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{7}
}
func (m *BlockNotification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockNotification.Unmarshal(m, b)
}
func (m *BlockNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockNotification.Marshal(b, m, deterministic)
}
func (dst *BlockNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockNotification.Merge(dst, src)
}
func (m *BlockNotification) XXX_Size() int {
	return xxx_messageInfo_BlockNotification.Size(m)
}
func (m *BlockNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockNotification.DiscardUnknown(m)
}

var xxx_messageInfo_BlockNotification proto.InternalMessageInfo

func (m *BlockNotification) GetType() BlockNotification_Type {
	if m != nil {
		return m.Type
	}
	return BlockNotification_CONNECTED
}

func (m *BlockNotification) GetBlock() *BlockInfo {
	if m != nil {
		return m.Block
	}
	return nil
}

type RawTransactionNotification struct {
	Type                 TransactionNotification_Type `protobuf:"varint,1,opt,name=type,enum=btcrpc.TransactionNotification_Type" json:"type,omitempty"`
	Transaction          []byte                       `protobuf:"bytes,2,opt,name=transaction,proto3" json:"transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *RawTransactionNotification) Reset()         { *m = RawTransactionNotification{} }
func (m *RawTransactionNotification) String() string { return proto.CompactTextString(m) }
func (*RawTransactionNotification) ProtoMessage()    {}
func (*RawTransactionNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{8}
}
func (m *RawTransactionNotification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawTransactionNotification.Unmarshal(m, b)
}
func (m *RawTransactionNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawTransactionNotification.Marshal(b, m, deterministic)
}
func (dst *RawTransactionNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawTransactionNotification.Merge(dst, src)
}
func (m *RawTransactionNotification) XXX_Size() int {
	return xxx_messageInfo_RawTransactionNotification.Size(m)
}
func (m *RawTransactionNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_RawTransactionNotification.DiscardUnknown(m)
}

var xxx_messageInfo_RawTransactionNotification proto.InternalMessageInfo

func (m *RawTransactionNotification) GetType() TransactionNotification_Type {
	if m != nil {
		return m.Type
	}
	return TransactionNotification_ACCEPTED
}

func (m *RawTransactionNotification) GetTransaction() []byte {
	if m != nil {
		return m.Transaction
	}
	return nil
}

type TransactionNotification struct {
	Type TransactionNotification_Type `protobuf:"varint,1,opt,name=type,enum=btcrpc.TransactionNotification_Type" json:"type,omitempty"`
	// Types that are valid to be assigned to Transaction:
	//	*TransactionNotification_ConfirmedTransaction
	//	*TransactionNotification_AcceptedTransaction
	Transaction          isTransactionNotification_Transaction `protobuf_oneof:"transaction"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *TransactionNotification) Reset()         { *m = TransactionNotification{} }
func (m *TransactionNotification) String() string { return proto.CompactTextString(m) }
func (*TransactionNotification) ProtoMessage()    {}
func (*TransactionNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{9}
}
func (m *TransactionNotification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionNotification.Unmarshal(m, b)
}
func (m *TransactionNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionNotification.Marshal(b, m, deterministic)
}
func (dst *TransactionNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionNotification.Merge(dst, src)
}
func (m *TransactionNotification) XXX_Size() int {
	return xxx_messageInfo_TransactionNotification.Size(m)
}
func (m *TransactionNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionNotification.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionNotification proto.InternalMessageInfo

type isTransactionNotification_Transaction interface {
	isTransactionNotification_Transaction()
}

type TransactionNotification_ConfirmedTransaction struct {
	ConfirmedTransaction *Transaction `protobuf:"bytes,2,opt,name=confirmed_transaction,json=confirmedTransaction,oneof"`
}
type TransactionNotification_AcceptedTransaction struct {
	AcceptedTransaction *MempoolTransaction `protobuf:"bytes,3,opt,name=accepted_transaction,json=acceptedTransaction,oneof"`
}

func (*TransactionNotification_ConfirmedTransaction) isTransactionNotification_Transaction() {}
func (*TransactionNotification_AcceptedTransaction) isTransactionNotification_Transaction()  {}

func (m *TransactionNotification) GetTransaction() isTransactionNotification_Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *TransactionNotification) GetType() TransactionNotification_Type {
	if m != nil {
		return m.Type
	}
	return TransactionNotification_ACCEPTED
}

func (m *TransactionNotification) GetConfirmedTransaction() *Transaction {
	if x, ok := m.GetTransaction().(*TransactionNotification_ConfirmedTransaction); ok {
		return x.ConfirmedTransaction
	}
	return nil
}

func (m *TransactionNotification) GetAcceptedTransaction() *MempoolTransaction {
	if x, ok := m.GetTransaction().(*TransactionNotification_AcceptedTransaction); ok {
		return x.AcceptedTransaction
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TransactionNotification) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TransactionNotification_OneofMarshaler, _TransactionNotification_OneofUnmarshaler, _TransactionNotification_OneofSizer, []interface{}{
		(*TransactionNotification_ConfirmedTransaction)(nil),
		(*TransactionNotification_AcceptedTransaction)(nil),
	}
}

func _TransactionNotification_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TransactionNotification)
	// transaction
	switch x := m.Transaction.(type) {
	case *TransactionNotification_ConfirmedTransaction:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ConfirmedTransaction); err != nil {
			return err
		}
	case *TransactionNotification_AcceptedTransaction:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AcceptedTransaction); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TransactionNotification.Transaction has unexpected type %T", x)
	}
	return nil
}

func _TransactionNotification_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TransactionNotification)
	switch tag {
	case 2: // transaction.confirmed_transaction
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Transaction)
		err := b.DecodeMessage(msg)
		m.Transaction = &TransactionNotification_ConfirmedTransaction{msg}
		return true, err
	case 3: // transaction.accepted_transaction
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MempoolTransaction)
		err := b.DecodeMessage(msg)
		m.Transaction = &TransactionNotification_AcceptedTransaction{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TransactionNotification_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TransactionNotification)
	// transaction
	switch x := m.Transaction.(type) {
	case *TransactionNotification_ConfirmedTransaction:
		s := proto.Size(x.ConfirmedTransaction)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TransactionNotification_AcceptedTransaction:
		s := proto.Size(x.AcceptedTransaction)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CalculateNetworkHashRateRequest struct {
	// The height of the block at which to calculate the hashrate.
	// The default is the current best height.
	EndHeight int32 `protobuf:"varint,1,opt,name=end_height,json=endHeight" json:"end_height,omitempty"`
	// The amount of blocks in the period to use for the calculation.
	// Use -1 to use the number of blocks since the last difficulty change.
	// The default is 120.
	NbBlocks             int32    `protobuf:"varint,2,opt,name=nb_blocks,json=nbBlocks" json:"nb_blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculateNetworkHashRateRequest) Reset()         { *m = CalculateNetworkHashRateRequest{} }
func (m *CalculateNetworkHashRateRequest) String() string { return proto.CompactTextString(m) }
func (*CalculateNetworkHashRateRequest) ProtoMessage()    {}
func (*CalculateNetworkHashRateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{10}
}
func (m *CalculateNetworkHashRateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculateNetworkHashRateRequest.Unmarshal(m, b)
}
func (m *CalculateNetworkHashRateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculateNetworkHashRateRequest.Marshal(b, m, deterministic)
}
func (dst *CalculateNetworkHashRateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculateNetworkHashRateRequest.Merge(dst, src)
}
func (m *CalculateNetworkHashRateRequest) XXX_Size() int {
	return xxx_messageInfo_CalculateNetworkHashRateRequest.Size(m)
}
func (m *CalculateNetworkHashRateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculateNetworkHashRateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CalculateNetworkHashRateRequest proto.InternalMessageInfo

func (m *CalculateNetworkHashRateRequest) GetEndHeight() int32 {
	if m != nil {
		return m.EndHeight
	}
	return 0
}

func (m *CalculateNetworkHashRateRequest) GetNbBlocks() int32 {
	if m != nil {
		return m.NbBlocks
	}
	return 0
}

type CalculateNetworkHashRateResponse struct {
	Hashrate             uint64   `protobuf:"varint,1,opt,name=hashrate" json:"hashrate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculateNetworkHashRateResponse) Reset()         { *m = CalculateNetworkHashRateResponse{} }
func (m *CalculateNetworkHashRateResponse) String() string { return proto.CompactTextString(m) }
func (*CalculateNetworkHashRateResponse) ProtoMessage()    {}
func (*CalculateNetworkHashRateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{11}
}
func (m *CalculateNetworkHashRateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculateNetworkHashRateResponse.Unmarshal(m, b)
}
func (m *CalculateNetworkHashRateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculateNetworkHashRateResponse.Marshal(b, m, deterministic)
}
func (dst *CalculateNetworkHashRateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculateNetworkHashRateResponse.Merge(dst, src)
}
func (m *CalculateNetworkHashRateResponse) XXX_Size() int {
	return xxx_messageInfo_CalculateNetworkHashRateResponse.Size(m)
}
func (m *CalculateNetworkHashRateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculateNetworkHashRateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CalculateNetworkHashRateResponse proto.InternalMessageInfo

func (m *CalculateNetworkHashRateResponse) GetHashrate() uint64 {
	if m != nil {
		return m.Hashrate
	}
	return 0
}

type ConnectPeerRequest struct {
	PeerAddress          string   `protobuf:"bytes,1,opt,name=peer_address,json=peerAddress" json:"peer_address,omitempty"`
	Permanent            bool     `protobuf:"varint,2,opt,name=permanent" json:"permanent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectPeerRequest) Reset()         { *m = ConnectPeerRequest{} }
func (m *ConnectPeerRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectPeerRequest) ProtoMessage()    {}
func (*ConnectPeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{12}
}
func (m *ConnectPeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectPeerRequest.Unmarshal(m, b)
}
func (m *ConnectPeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectPeerRequest.Marshal(b, m, deterministic)
}
func (dst *ConnectPeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectPeerRequest.Merge(dst, src)
}
func (m *ConnectPeerRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectPeerRequest.Size(m)
}
func (m *ConnectPeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectPeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectPeerRequest proto.InternalMessageInfo

func (m *ConnectPeerRequest) GetPeerAddress() string {
	if m != nil {
		return m.PeerAddress
	}
	return ""
}

func (m *ConnectPeerRequest) GetPermanent() bool {
	if m != nil {
		return m.Permanent
	}
	return false
}

type ConnectPeerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectPeerResponse) Reset()         { *m = ConnectPeerResponse{} }
func (m *ConnectPeerResponse) String() string { return proto.CompactTextString(m) }
func (*ConnectPeerResponse) ProtoMessage()    {}
func (*ConnectPeerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{13}
}
func (m *ConnectPeerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectPeerResponse.Unmarshal(m, b)
}
func (m *ConnectPeerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectPeerResponse.Marshal(b, m, deterministic)
}
func (dst *ConnectPeerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectPeerResponse.Merge(dst, src)
}
func (m *ConnectPeerResponse) XXX_Size() int {
	return xxx_messageInfo_ConnectPeerResponse.Size(m)
}
func (m *ConnectPeerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectPeerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectPeerResponse proto.InternalMessageInfo

type DisconnectPeerRequest struct {
	// Types that are valid to be assigned to Peer:
	//	*DisconnectPeerRequest_PeerAddress
	//	*DisconnectPeerRequest_PeerId
	Peer                 isDisconnectPeerRequest_Peer `protobuf_oneof:"peer"`
	Permanent            bool                         `protobuf:"varint,3,opt,name=permanent" json:"permanent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *DisconnectPeerRequest) Reset()         { *m = DisconnectPeerRequest{} }
func (m *DisconnectPeerRequest) String() string { return proto.CompactTextString(m) }
func (*DisconnectPeerRequest) ProtoMessage()    {}
func (*DisconnectPeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{14}
}
func (m *DisconnectPeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectPeerRequest.Unmarshal(m, b)
}
func (m *DisconnectPeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectPeerRequest.Marshal(b, m, deterministic)
}
func (dst *DisconnectPeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectPeerRequest.Merge(dst, src)
}
func (m *DisconnectPeerRequest) XXX_Size() int {
	return xxx_messageInfo_DisconnectPeerRequest.Size(m)
}
func (m *DisconnectPeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectPeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectPeerRequest proto.InternalMessageInfo

type isDisconnectPeerRequest_Peer interface {
	isDisconnectPeerRequest_Peer()
}

type DisconnectPeerRequest_PeerAddress struct {
	PeerAddress string `protobuf:"bytes,1,opt,name=peer_address,json=peerAddress,oneof"`
}
type DisconnectPeerRequest_PeerId struct {
	PeerId int32 `protobuf:"varint,2,opt,name=peer_id,json=peerId,oneof"`
}

func (*DisconnectPeerRequest_PeerAddress) isDisconnectPeerRequest_Peer() {}
func (*DisconnectPeerRequest_PeerId) isDisconnectPeerRequest_Peer()      {}

func (m *DisconnectPeerRequest) GetPeer() isDisconnectPeerRequest_Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *DisconnectPeerRequest) GetPeerAddress() string {
	if x, ok := m.GetPeer().(*DisconnectPeerRequest_PeerAddress); ok {
		return x.PeerAddress
	}
	return ""
}

func (m *DisconnectPeerRequest) GetPeerId() int32 {
	if x, ok := m.GetPeer().(*DisconnectPeerRequest_PeerId); ok {
		return x.PeerId
	}
	return 0
}

func (m *DisconnectPeerRequest) GetPermanent() bool {
	if m != nil {
		return m.Permanent
	}
	return false
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DisconnectPeerRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DisconnectPeerRequest_OneofMarshaler, _DisconnectPeerRequest_OneofUnmarshaler, _DisconnectPeerRequest_OneofSizer, []interface{}{
		(*DisconnectPeerRequest_PeerAddress)(nil),
		(*DisconnectPeerRequest_PeerId)(nil),
	}
}

func _DisconnectPeerRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DisconnectPeerRequest)
	// peer
	switch x := m.Peer.(type) {
	case *DisconnectPeerRequest_PeerAddress:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.PeerAddress)
	case *DisconnectPeerRequest_PeerId:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.PeerId))
	case nil:
	default:
		return fmt.Errorf("DisconnectPeerRequest.Peer has unexpected type %T", x)
	}
	return nil
}

func _DisconnectPeerRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DisconnectPeerRequest)
	switch tag {
	case 1: // peer.peer_address
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Peer = &DisconnectPeerRequest_PeerAddress{x}
		return true, err
	case 2: // peer.peer_id
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Peer = &DisconnectPeerRequest_PeerId{int32(x)}
		return true, err
	default:
		return false, nil
	}
}

func _DisconnectPeerRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DisconnectPeerRequest)
	// peer
	switch x := m.Peer.(type) {
	case *DisconnectPeerRequest_PeerAddress:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.PeerAddress)))
		n += len(x.PeerAddress)
	case *DisconnectPeerRequest_PeerId:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.PeerId))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type DisconnectPeerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectPeerResponse) Reset()         { *m = DisconnectPeerResponse{} }
func (m *DisconnectPeerResponse) String() string { return proto.CompactTextString(m) }
func (*DisconnectPeerResponse) ProtoMessage()    {}
func (*DisconnectPeerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{15}
}
func (m *DisconnectPeerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectPeerResponse.Unmarshal(m, b)
}
func (m *DisconnectPeerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectPeerResponse.Marshal(b, m, deterministic)
}
func (dst *DisconnectPeerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectPeerResponse.Merge(dst, src)
}
func (m *DisconnectPeerResponse) XXX_Size() int {
	return xxx_messageInfo_DisconnectPeerResponse.Size(m)
}
func (m *DisconnectPeerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectPeerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectPeerResponse proto.InternalMessageInfo

type GenerateBlocksRequest struct {
	NbBlocks             uint32   `protobuf:"varint,1,opt,name=nb_blocks,json=nbBlocks" json:"nb_blocks,omitempty"`
	PayoutAddress        string   `protobuf:"bytes,2,opt,name=payout_address,json=payoutAddress" json:"payout_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenerateBlocksRequest) Reset()         { *m = GenerateBlocksRequest{} }
func (m *GenerateBlocksRequest) String() string { return proto.CompactTextString(m) }
func (*GenerateBlocksRequest) ProtoMessage()    {}
func (*GenerateBlocksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{16}
}
func (m *GenerateBlocksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateBlocksRequest.Unmarshal(m, b)
}
func (m *GenerateBlocksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateBlocksRequest.Marshal(b, m, deterministic)
}
func (dst *GenerateBlocksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateBlocksRequest.Merge(dst, src)
}
func (m *GenerateBlocksRequest) XXX_Size() int {
	return xxx_messageInfo_GenerateBlocksRequest.Size(m)
}
func (m *GenerateBlocksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateBlocksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateBlocksRequest proto.InternalMessageInfo

func (m *GenerateBlocksRequest) GetNbBlocks() uint32 {
	if m != nil {
		return m.NbBlocks
	}
	return 0
}

func (m *GenerateBlocksRequest) GetPayoutAddress() string {
	if m != nil {
		return m.PayoutAddress
	}
	return ""
}

type GenerateBlocksResponse struct {
	BlockHashes          [][]byte `protobuf:"bytes,1,rep,name=block_hashes,json=blockHashes,proto3" json:"block_hashes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenerateBlocksResponse) Reset()         { *m = GenerateBlocksResponse{} }
func (m *GenerateBlocksResponse) String() string { return proto.CompactTextString(m) }
func (*GenerateBlocksResponse) ProtoMessage()    {}
func (*GenerateBlocksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{17}
}
func (m *GenerateBlocksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateBlocksResponse.Unmarshal(m, b)
}
func (m *GenerateBlocksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateBlocksResponse.Marshal(b, m, deterministic)
}
func (dst *GenerateBlocksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateBlocksResponse.Merge(dst, src)
}
func (m *GenerateBlocksResponse) XXX_Size() int {
	return xxx_messageInfo_GenerateBlocksResponse.Size(m)
}
func (m *GenerateBlocksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateBlocksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateBlocksResponse proto.InternalMessageInfo

func (m *GenerateBlocksResponse) GetBlockHashes() [][]byte {
	if m != nil {
		return m.BlockHashes
	}
	return nil
}

type GetAddressTransactionsRequest struct {
	Address string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	// Control the number of transactions to be fetched from the blockchain.
	// These controls only apply to the confirmed transactions. All unconfirmed
	// ones will be returned always.
	// TODO(stevenroose) is this worth it instead of just always returning all of
	// them?  The current implementation allows this, though. So why not.
	NbSkip               uint32   `protobuf:"varint,2,opt,name=nb_skip,json=nbSkip" json:"nb_skip,omitempty"`
	NbFetch              uint32   `protobuf:"varint,3,opt,name=nb_fetch,json=nbFetch" json:"nb_fetch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAddressTransactionsRequest) Reset()         { *m = GetAddressTransactionsRequest{} }
func (m *GetAddressTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAddressTransactionsRequest) ProtoMessage()    {}
func (*GetAddressTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{18}
}
func (m *GetAddressTransactionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAddressTransactionsRequest.Unmarshal(m, b)
}
func (m *GetAddressTransactionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAddressTransactionsRequest.Marshal(b, m, deterministic)
}
func (dst *GetAddressTransactionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAddressTransactionsRequest.Merge(dst, src)
}
func (m *GetAddressTransactionsRequest) XXX_Size() int {
	return xxx_messageInfo_GetAddressTransactionsRequest.Size(m)
}
func (m *GetAddressTransactionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAddressTransactionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAddressTransactionsRequest proto.InternalMessageInfo

func (m *GetAddressTransactionsRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GetAddressTransactionsRequest) GetNbSkip() uint32 {
	if m != nil {
		return m.NbSkip
	}
	return 0
}

func (m *GetAddressTransactionsRequest) GetNbFetch() uint32 {
	if m != nil {
		return m.NbFetch
	}
	return 0
}

type GetAddressTransactionsResponse struct {
	ConfirmedTransactions   []*Transaction `protobuf:"bytes,1,rep,name=confirmed_transactions,json=confirmedTransactions" json:"confirmed_transactions,omitempty"`
	UnconfirmedTransactions []*Transaction `protobuf:"bytes,2,rep,name=unconfirmed_transactions,json=unconfirmedTransactions" json:"unconfirmed_transactions,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}       `json:"-"`
	XXX_unrecognized        []byte         `json:"-"`
	XXX_sizecache           int32          `json:"-"`
}

func (m *GetAddressTransactionsResponse) Reset()         { *m = GetAddressTransactionsResponse{} }
func (m *GetAddressTransactionsResponse) String() string { return proto.CompactTextString(m) }
func (*GetAddressTransactionsResponse) ProtoMessage()    {}
func (*GetAddressTransactionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{19}
}
func (m *GetAddressTransactionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAddressTransactionsResponse.Unmarshal(m, b)
}
func (m *GetAddressTransactionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAddressTransactionsResponse.Marshal(b, m, deterministic)
}
func (dst *GetAddressTransactionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAddressTransactionsResponse.Merge(dst, src)
}
func (m *GetAddressTransactionsResponse) XXX_Size() int {
	return xxx_messageInfo_GetAddressTransactionsResponse.Size(m)
}
func (m *GetAddressTransactionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAddressTransactionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAddressTransactionsResponse proto.InternalMessageInfo

func (m *GetAddressTransactionsResponse) GetConfirmedTransactions() []*Transaction {
	if m != nil {
		return m.ConfirmedTransactions
	}
	return nil
}

func (m *GetAddressTransactionsResponse) GetUnconfirmedTransactions() []*Transaction {
	if m != nil {
		return m.UnconfirmedTransactions
	}
	return nil
}

type GetRawAddressTransactionsResponse struct {
	ConfirmedTransactions   [][]byte `protobuf:"bytes,1,rep,name=confirmed_transactions,json=confirmedTransactions,proto3" json:"confirmed_transactions,omitempty"`
	UnconfirmedTransactions [][]byte `protobuf:"bytes,2,rep,name=unconfirmed_transactions,json=unconfirmedTransactions,proto3" json:"unconfirmed_transactions,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *GetRawAddressTransactionsResponse) Reset()         { *m = GetRawAddressTransactionsResponse{} }
func (m *GetRawAddressTransactionsResponse) String() string { return proto.CompactTextString(m) }
func (*GetRawAddressTransactionsResponse) ProtoMessage()    {}
func (*GetRawAddressTransactionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{20}
}
func (m *GetRawAddressTransactionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRawAddressTransactionsResponse.Unmarshal(m, b)
}
func (m *GetRawAddressTransactionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRawAddressTransactionsResponse.Marshal(b, m, deterministic)
}
func (dst *GetRawAddressTransactionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRawAddressTransactionsResponse.Merge(dst, src)
}
func (m *GetRawAddressTransactionsResponse) XXX_Size() int {
	return xxx_messageInfo_GetRawAddressTransactionsResponse.Size(m)
}
func (m *GetRawAddressTransactionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRawAddressTransactionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRawAddressTransactionsResponse proto.InternalMessageInfo

func (m *GetRawAddressTransactionsResponse) GetConfirmedTransactions() [][]byte {
	if m != nil {
		return m.ConfirmedTransactions
	}
	return nil
}

func (m *GetRawAddressTransactionsResponse) GetUnconfirmedTransactions() [][]byte {
	if m != nil {
		return m.UnconfirmedTransactions
	}
	return nil
}

type GetAddressUnspentOutputsRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAddressUnspentOutputsRequest) Reset()         { *m = GetAddressUnspentOutputsRequest{} }
func (m *GetAddressUnspentOutputsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAddressUnspentOutputsRequest) ProtoMessage()    {}
func (*GetAddressUnspentOutputsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{21}
}
func (m *GetAddressUnspentOutputsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAddressUnspentOutputsRequest.Unmarshal(m, b)
}
func (m *GetAddressUnspentOutputsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAddressUnspentOutputsRequest.Marshal(b, m, deterministic)
}
func (dst *GetAddressUnspentOutputsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAddressUnspentOutputsRequest.Merge(dst, src)
}
func (m *GetAddressUnspentOutputsRequest) XXX_Size() int {
	return xxx_messageInfo_GetAddressUnspentOutputsRequest.Size(m)
}
func (m *GetAddressUnspentOutputsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAddressUnspentOutputsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAddressUnspentOutputsRequest proto.InternalMessageInfo

func (m *GetAddressUnspentOutputsRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type GetAddressUnspentOutputsResponse struct {
	Outputs              []*UnspentOutput `protobuf:"bytes,1,rep,name=outputs" json:"outputs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetAddressUnspentOutputsResponse) Reset()         { *m = GetAddressUnspentOutputsResponse{} }
func (m *GetAddressUnspentOutputsResponse) String() string { return proto.CompactTextString(m) }
func (*GetAddressUnspentOutputsResponse) ProtoMessage()    {}
func (*GetAddressUnspentOutputsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{22}
}
func (m *GetAddressUnspentOutputsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAddressUnspentOutputsResponse.Unmarshal(m, b)
}
func (m *GetAddressUnspentOutputsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAddressUnspentOutputsResponse.Marshal(b, m, deterministic)
}
func (dst *GetAddressUnspentOutputsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAddressUnspentOutputsResponse.Merge(dst, src)
}
func (m *GetAddressUnspentOutputsResponse) XXX_Size() int {
	return xxx_messageInfo_GetAddressUnspentOutputsResponse.Size(m)
}
func (m *GetAddressUnspentOutputsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAddressUnspentOutputsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAddressUnspentOutputsResponse proto.InternalMessageInfo

func (m *GetAddressUnspentOutputsResponse) GetOutputs() []*UnspentOutput {
	if m != nil {
		return m.Outputs
	}
	return nil
}

type GetBestBlockInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBestBlockInfoRequest) Reset()         { *m = GetBestBlockInfoRequest{} }
func (m *GetBestBlockInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetBestBlockInfoRequest) ProtoMessage()    {}
func (*GetBestBlockInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{23}
}
func (m *GetBestBlockInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBestBlockInfoRequest.Unmarshal(m, b)
}
func (m *GetBestBlockInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBestBlockInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetBestBlockInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBestBlockInfoRequest.Merge(dst, src)
}
func (m *GetBestBlockInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetBestBlockInfoRequest.Size(m)
}
func (m *GetBestBlockInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBestBlockInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBestBlockInfoRequest proto.InternalMessageInfo

type GetBestBlockInfoResponse struct {
	Info                 *BlockInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetBestBlockInfoResponse) Reset()         { *m = GetBestBlockInfoResponse{} }
func (m *GetBestBlockInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetBestBlockInfoResponse) ProtoMessage()    {}
func (*GetBestBlockInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{24}
}
func (m *GetBestBlockInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBestBlockInfoResponse.Unmarshal(m, b)
}
func (m *GetBestBlockInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBestBlockInfoResponse.Marshal(b, m, deterministic)
}
func (dst *GetBestBlockInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBestBlockInfoResponse.Merge(dst, src)
}
func (m *GetBestBlockInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetBestBlockInfoResponse.Size(m)
}
func (m *GetBestBlockInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBestBlockInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBestBlockInfoResponse proto.InternalMessageInfo

func (m *GetBestBlockInfoResponse) GetInfo() *BlockInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type GetBlockRequest struct {
	Locator *BlockLocator `protobuf:"bytes,1,opt,name=locator" json:"locator,omitempty"`
	// Provide full transaction info instead of only the hashes.
	FullTransactions     bool     `protobuf:"varint,2,opt,name=full_transactions,json=fullTransactions" json:"full_transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockRequest) Reset()         { *m = GetBlockRequest{} }
func (m *GetBlockRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockRequest) ProtoMessage()    {}
func (*GetBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{25}
}
func (m *GetBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockRequest.Unmarshal(m, b)
}
func (m *GetBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockRequest.Marshal(b, m, deterministic)
}
func (dst *GetBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockRequest.Merge(dst, src)
}
func (m *GetBlockRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockRequest.Size(m)
}
func (m *GetBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockRequest proto.InternalMessageInfo

func (m *GetBlockRequest) GetLocator() *BlockLocator {
	if m != nil {
		return m.Locator
	}
	return nil
}

func (m *GetBlockRequest) GetFullTransactions() bool {
	if m != nil {
		return m.FullTransactions
	}
	return false
}

type GetBlockResponse struct {
	Block                *Block   `protobuf:"bytes,1,opt,name=block" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockResponse) Reset()         { *m = GetBlockResponse{} }
func (m *GetBlockResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlockResponse) ProtoMessage()    {}
func (*GetBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{26}
}
func (m *GetBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockResponse.Unmarshal(m, b)
}
func (m *GetBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockResponse.Marshal(b, m, deterministic)
}
func (dst *GetBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockResponse.Merge(dst, src)
}
func (m *GetBlockResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlockResponse.Size(m)
}
func (m *GetBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockResponse proto.InternalMessageInfo

func (m *GetBlockResponse) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type GetBlockCountRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockCountRequest) Reset()         { *m = GetBlockCountRequest{} }
func (m *GetBlockCountRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockCountRequest) ProtoMessage()    {}
func (*GetBlockCountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{27}
}
func (m *GetBlockCountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockCountRequest.Unmarshal(m, b)
}
func (m *GetBlockCountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockCountRequest.Marshal(b, m, deterministic)
}
func (dst *GetBlockCountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockCountRequest.Merge(dst, src)
}
func (m *GetBlockCountRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockCountRequest.Size(m)
}
func (m *GetBlockCountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockCountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockCountRequest proto.InternalMessageInfo

type GetBlockCountResponse struct {
	BlockCount           uint32   `protobuf:"varint,1,opt,name=block_count,json=blockCount" json:"block_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockCountResponse) Reset()         { *m = GetBlockCountResponse{} }
func (m *GetBlockCountResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlockCountResponse) ProtoMessage()    {}
func (*GetBlockCountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{28}
}
func (m *GetBlockCountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockCountResponse.Unmarshal(m, b)
}
func (m *GetBlockCountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockCountResponse.Marshal(b, m, deterministic)
}
func (dst *GetBlockCountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockCountResponse.Merge(dst, src)
}
func (m *GetBlockCountResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlockCountResponse.Size(m)
}
func (m *GetBlockCountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockCountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockCountResponse proto.InternalMessageInfo

func (m *GetBlockCountResponse) GetBlockCount() uint32 {
	if m != nil {
		return m.BlockCount
	}
	return 0
}

type GetBlockInfoRequest struct {
	Locator              *BlockLocator `protobuf:"bytes,1,opt,name=locator" json:"locator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetBlockInfoRequest) Reset()         { *m = GetBlockInfoRequest{} }
func (m *GetBlockInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockInfoRequest) ProtoMessage()    {}
func (*GetBlockInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{29}
}
func (m *GetBlockInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockInfoRequest.Unmarshal(m, b)
}
func (m *GetBlockInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetBlockInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockInfoRequest.Merge(dst, src)
}
func (m *GetBlockInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockInfoRequest.Size(m)
}
func (m *GetBlockInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockInfoRequest proto.InternalMessageInfo

func (m *GetBlockInfoRequest) GetLocator() *BlockLocator {
	if m != nil {
		return m.Locator
	}
	return nil
}

type GetBlockInfoResponse struct {
	Info                 *BlockInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetBlockInfoResponse) Reset()         { *m = GetBlockInfoResponse{} }
func (m *GetBlockInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlockInfoResponse) ProtoMessage()    {}
func (*GetBlockInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{30}
}
func (m *GetBlockInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockInfoResponse.Unmarshal(m, b)
}
func (m *GetBlockInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockInfoResponse.Marshal(b, m, deterministic)
}
func (dst *GetBlockInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockInfoResponse.Merge(dst, src)
}
func (m *GetBlockInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlockInfoResponse.Size(m)
}
func (m *GetBlockInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockInfoResponse proto.InternalMessageInfo

func (m *GetBlockInfoResponse) GetInfo() *BlockInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type GetGenerateInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGenerateInfoRequest) Reset()         { *m = GetGenerateInfoRequest{} }
func (m *GetGenerateInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetGenerateInfoRequest) ProtoMessage()    {}
func (*GetGenerateInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{31}
}
func (m *GetGenerateInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGenerateInfoRequest.Unmarshal(m, b)
}
func (m *GetGenerateInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGenerateInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetGenerateInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGenerateInfoRequest.Merge(dst, src)
}
func (m *GetGenerateInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetGenerateInfoRequest.Size(m)
}
func (m *GetGenerateInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGenerateInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGenerateInfoRequest proto.InternalMessageInfo

type GetGenerateInfoResponse struct {
	Generate             bool     `protobuf:"varint,1,opt,name=generate" json:"generate,omitempty"`
	NbWorkers            int32    `protobuf:"varint,2,opt,name=nb_workers,json=nbWorkers" json:"nb_workers,omitempty"`
	Hashrate             uint64   `protobuf:"varint,3,opt,name=hashrate" json:"hashrate,omitempty"`
	Difficulty           float64  `protobuf:"fixed64,4,opt,name=difficulty" json:"difficulty,omitempty"`
	NbPooledTransactions uint32   `protobuf:"varint,5,opt,name=nb_pooled_transactions,json=nbPooledTransactions" json:"nb_pooled_transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGenerateInfoResponse) Reset()         { *m = GetGenerateInfoResponse{} }
func (m *GetGenerateInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetGenerateInfoResponse) ProtoMessage()    {}
func (*GetGenerateInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{32}
}
func (m *GetGenerateInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGenerateInfoResponse.Unmarshal(m, b)
}
func (m *GetGenerateInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGenerateInfoResponse.Marshal(b, m, deterministic)
}
func (dst *GetGenerateInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGenerateInfoResponse.Merge(dst, src)
}
func (m *GetGenerateInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetGenerateInfoResponse.Size(m)
}
func (m *GetGenerateInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGenerateInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetGenerateInfoResponse proto.InternalMessageInfo

func (m *GetGenerateInfoResponse) GetGenerate() bool {
	if m != nil {
		return m.Generate
	}
	return false
}

func (m *GetGenerateInfoResponse) GetNbWorkers() int32 {
	if m != nil {
		return m.NbWorkers
	}
	return 0
}

func (m *GetGenerateInfoResponse) GetHashrate() uint64 {
	if m != nil {
		return m.Hashrate
	}
	return 0
}

func (m *GetGenerateInfoResponse) GetDifficulty() float64 {
	if m != nil {
		return m.Difficulty
	}
	return 0
}

func (m *GetGenerateInfoResponse) GetNbPooledTransactions() uint32 {
	if m != nil {
		return m.NbPooledTransactions
	}
	return 0
}

type GetMempoolRequest struct {
	// Provide full transaction info instead of only the hashes.
	FullTransactions     bool     `protobuf:"varint,1,opt,name=full_transactions,json=fullTransactions" json:"full_transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMempoolRequest) Reset()         { *m = GetMempoolRequest{} }
func (m *GetMempoolRequest) String() string { return proto.CompactTextString(m) }
func (*GetMempoolRequest) ProtoMessage()    {}
func (*GetMempoolRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{33}
}
func (m *GetMempoolRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMempoolRequest.Unmarshal(m, b)
}
func (m *GetMempoolRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMempoolRequest.Marshal(b, m, deterministic)
}
func (dst *GetMempoolRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMempoolRequest.Merge(dst, src)
}
func (m *GetMempoolRequest) XXX_Size() int {
	return xxx_messageInfo_GetMempoolRequest.Size(m)
}
func (m *GetMempoolRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMempoolRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMempoolRequest proto.InternalMessageInfo

func (m *GetMempoolRequest) GetFullTransactions() bool {
	if m != nil {
		return m.FullTransactions
	}
	return false
}

type GetMempoolResponse struct {
	// Either one of the two following is provided, depending on the request.
	TransactionHashes    [][]byte              `protobuf:"bytes,1,rep,name=transaction_hashes,json=transactionHashes,proto3" json:"transaction_hashes,omitempty"`
	Transactions         []*MempoolTransaction `protobuf:"bytes,2,rep,name=transactions" json:"transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetMempoolResponse) Reset()         { *m = GetMempoolResponse{} }
func (m *GetMempoolResponse) String() string { return proto.CompactTextString(m) }
func (*GetMempoolResponse) ProtoMessage()    {}
func (*GetMempoolResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{34}
}
func (m *GetMempoolResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMempoolResponse.Unmarshal(m, b)
}
func (m *GetMempoolResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMempoolResponse.Marshal(b, m, deterministic)
}
func (dst *GetMempoolResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMempoolResponse.Merge(dst, src)
}
func (m *GetMempoolResponse) XXX_Size() int {
	return xxx_messageInfo_GetMempoolResponse.Size(m)
}
func (m *GetMempoolResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMempoolResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMempoolResponse proto.InternalMessageInfo

func (m *GetMempoolResponse) GetTransactionHashes() [][]byte {
	if m != nil {
		return m.TransactionHashes
	}
	return nil
}

func (m *GetMempoolResponse) GetTransactions() []*MempoolTransaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type GetMempoolInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMempoolInfoRequest) Reset()         { *m = GetMempoolInfoRequest{} }
func (m *GetMempoolInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetMempoolInfoRequest) ProtoMessage()    {}
func (*GetMempoolInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{35}
}
func (m *GetMempoolInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMempoolInfoRequest.Unmarshal(m, b)
}
func (m *GetMempoolInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMempoolInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetMempoolInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMempoolInfoRequest.Merge(dst, src)
}
func (m *GetMempoolInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetMempoolInfoRequest.Size(m)
}
func (m *GetMempoolInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMempoolInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMempoolInfoRequest proto.InternalMessageInfo

type GetMempoolInfoResponse struct {
	NbTransactions       uint32   `protobuf:"varint,1,opt,name=nb_transactions,json=nbTransactions" json:"nb_transactions,omitempty"`
	NbBytes              uint64   `protobuf:"varint,2,opt,name=nb_bytes,json=nbBytes" json:"nb_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMempoolInfoResponse) Reset()         { *m = GetMempoolInfoResponse{} }
func (m *GetMempoolInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetMempoolInfoResponse) ProtoMessage()    {}
func (*GetMempoolInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{36}
}
func (m *GetMempoolInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMempoolInfoResponse.Unmarshal(m, b)
}
func (m *GetMempoolInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMempoolInfoResponse.Marshal(b, m, deterministic)
}
func (dst *GetMempoolInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMempoolInfoResponse.Merge(dst, src)
}
func (m *GetMempoolInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetMempoolInfoResponse.Size(m)
}
func (m *GetMempoolInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMempoolInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMempoolInfoResponse proto.InternalMessageInfo

func (m *GetMempoolInfoResponse) GetNbTransactions() uint32 {
	if m != nil {
		return m.NbTransactions
	}
	return 0
}

func (m *GetMempoolInfoResponse) GetNbBytes() uint64 {
	if m != nil {
		return m.NbBytes
	}
	return 0
}

type GetMiningInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMiningInfoRequest) Reset()         { *m = GetMiningInfoRequest{} }
func (m *GetMiningInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetMiningInfoRequest) ProtoMessage()    {}
func (*GetMiningInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{37}
}
func (m *GetMiningInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMiningInfoRequest.Unmarshal(m, b)
}
func (m *GetMiningInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMiningInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetMiningInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMiningInfoRequest.Merge(dst, src)
}
func (m *GetMiningInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetMiningInfoRequest.Size(m)
}
func (m *GetMiningInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMiningInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMiningInfoRequest proto.InternalMessageInfo

type GetMiningInfoResponse struct {
	NetworkHashrate            uint64   `protobuf:"varint,1,opt,name=network_hashrate,json=networkHashrate" json:"network_hashrate,omitempty"`
	CurrentBlockHeight         int32    `protobuf:"varint,2,opt,name=current_block_height,json=currentBlockHeight" json:"current_block_height,omitempty"`
	CurrentBlockSize           uint64   `protobuf:"varint,3,opt,name=current_block_size,json=currentBlockSize" json:"current_block_size,omitempty"`
	CurrentBlockWeight         uint64   `protobuf:"varint,4,opt,name=current_block_weight,json=currentBlockWeight" json:"current_block_weight,omitempty"`
	CurrentBlockNbTransactions uint32   `protobuf:"varint,5,opt,name=current_block_nb_transactions,json=currentBlockNbTransactions" json:"current_block_nb_transactions,omitempty"`
	Difficulty                 float64  `protobuf:"fixed64,6,opt,name=difficulty" json:"difficulty,omitempty"`
	Errors                     string   `protobuf:"bytes,7,opt,name=errors" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *GetMiningInfoResponse) Reset()         { *m = GetMiningInfoResponse{} }
func (m *GetMiningInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetMiningInfoResponse) ProtoMessage()    {}
func (*GetMiningInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{38}
}
func (m *GetMiningInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMiningInfoResponse.Unmarshal(m, b)
}
func (m *GetMiningInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMiningInfoResponse.Marshal(b, m, deterministic)
}
func (dst *GetMiningInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMiningInfoResponse.Merge(dst, src)
}
func (m *GetMiningInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetMiningInfoResponse.Size(m)
}
func (m *GetMiningInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMiningInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMiningInfoResponse proto.InternalMessageInfo

func (m *GetMiningInfoResponse) GetNetworkHashrate() uint64 {
	if m != nil {
		return m.NetworkHashrate
	}
	return 0
}

func (m *GetMiningInfoResponse) GetCurrentBlockHeight() int32 {
	if m != nil {
		return m.CurrentBlockHeight
	}
	return 0
}

func (m *GetMiningInfoResponse) GetCurrentBlockSize() uint64 {
	if m != nil {
		return m.CurrentBlockSize
	}
	return 0
}

func (m *GetMiningInfoResponse) GetCurrentBlockWeight() uint64 {
	if m != nil {
		return m.CurrentBlockWeight
	}
	return 0
}

func (m *GetMiningInfoResponse) GetCurrentBlockNbTransactions() uint32 {
	if m != nil {
		return m.CurrentBlockNbTransactions
	}
	return 0
}

func (m *GetMiningInfoResponse) GetDifficulty() float64 {
	if m != nil {
		return m.Difficulty
	}
	return 0
}

func (m *GetMiningInfoResponse) GetErrors() string {
	if m != nil {
		return m.Errors
	}
	return ""
}

type GetNetworkInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNetworkInfoRequest) Reset()         { *m = GetNetworkInfoRequest{} }
func (m *GetNetworkInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetNetworkInfoRequest) ProtoMessage()    {}
func (*GetNetworkInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{39}
}
func (m *GetNetworkInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNetworkInfoRequest.Unmarshal(m, b)
}
func (m *GetNetworkInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNetworkInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetNetworkInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNetworkInfoRequest.Merge(dst, src)
}
func (m *GetNetworkInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetNetworkInfoRequest.Size(m)
}
func (m *GetNetworkInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNetworkInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNetworkInfoRequest proto.InternalMessageInfo

type GetNetworkInfoResponse struct {
	BitcoinNet           GetNetworkInfoResponse_BitcoinNet `protobuf:"varint,1,opt,name=bitcoin_net,json=bitcoinNet,enum=btcrpc.GetNetworkInfoResponse_BitcoinNet" json:"bitcoin_net,omitempty"`
	BestHeight           int32                             `protobuf:"varint,2,opt,name=best_height,json=bestHeight" json:"best_height,omitempty"`
	TimeOffset           int64                             `protobuf:"varint,3,opt,name=time_offset,json=timeOffset" json:"time_offset,omitempty"`
	Difficulty           float64                           `protobuf:"fixed64,4,opt,name=difficulty" json:"difficulty,omitempty"`
	Hashrate             uint64                            `protobuf:"varint,5,opt,name=hashrate" json:"hashrate,omitempty"`
	RelayFee             float64                           `protobuf:"fixed64,6,opt,name=relay_fee,json=relayFee" json:"relay_fee,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *GetNetworkInfoResponse) Reset()         { *m = GetNetworkInfoResponse{} }
func (m *GetNetworkInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetNetworkInfoResponse) ProtoMessage()    {}
func (*GetNetworkInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{40}
}
func (m *GetNetworkInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNetworkInfoResponse.Unmarshal(m, b)
}
func (m *GetNetworkInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNetworkInfoResponse.Marshal(b, m, deterministic)
}
func (dst *GetNetworkInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNetworkInfoResponse.Merge(dst, src)
}
func (m *GetNetworkInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetNetworkInfoResponse.Size(m)
}
func (m *GetNetworkInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNetworkInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNetworkInfoResponse proto.InternalMessageInfo

func (m *GetNetworkInfoResponse) GetBitcoinNet() GetNetworkInfoResponse_BitcoinNet {
	if m != nil {
		return m.BitcoinNet
	}
	return GetNetworkInfoResponse_MAINNET
}

func (m *GetNetworkInfoResponse) GetBestHeight() int32 {
	if m != nil {
		return m.BestHeight
	}
	return 0
}

func (m *GetNetworkInfoResponse) GetTimeOffset() int64 {
	if m != nil {
		return m.TimeOffset
	}
	return 0
}

func (m *GetNetworkInfoResponse) GetDifficulty() float64 {
	if m != nil {
		return m.Difficulty
	}
	return 0
}

func (m *GetNetworkInfoResponse) GetHashrate() uint64 {
	if m != nil {
		return m.Hashrate
	}
	return 0
}

func (m *GetNetworkInfoResponse) GetRelayFee() float64 {
	if m != nil {
		return m.RelayFee
	}
	return 0
}

type GetPeersRequest struct {
	Permanent            bool     `protobuf:"varint,1,opt,name=permanent" json:"permanent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPeersRequest) Reset()         { *m = GetPeersRequest{} }
func (m *GetPeersRequest) String() string { return proto.CompactTextString(m) }
func (*GetPeersRequest) ProtoMessage()    {}
func (*GetPeersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{41}
}
func (m *GetPeersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPeersRequest.Unmarshal(m, b)
}
func (m *GetPeersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPeersRequest.Marshal(b, m, deterministic)
}
func (dst *GetPeersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPeersRequest.Merge(dst, src)
}
func (m *GetPeersRequest) XXX_Size() int {
	return xxx_messageInfo_GetPeersRequest.Size(m)
}
func (m *GetPeersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPeersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPeersRequest proto.InternalMessageInfo

func (m *GetPeersRequest) GetPermanent() bool {
	if m != nil {
		return m.Permanent
	}
	return false
}

type GetPeersResponse struct {
	Peers                []*GetPeersResponse_PeerInfo `protobuf:"bytes,1,rep,name=peers" json:"peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *GetPeersResponse) Reset()         { *m = GetPeersResponse{} }
func (m *GetPeersResponse) String() string { return proto.CompactTextString(m) }
func (*GetPeersResponse) ProtoMessage()    {}
func (*GetPeersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{42}
}
func (m *GetPeersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPeersResponse.Unmarshal(m, b)
}
func (m *GetPeersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPeersResponse.Marshal(b, m, deterministic)
}
func (dst *GetPeersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPeersResponse.Merge(dst, src)
}
func (m *GetPeersResponse) XXX_Size() int {
	return xxx_messageInfo_GetPeersResponse.Size(m)
}
func (m *GetPeersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPeersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPeersResponse proto.InternalMessageInfo

func (m *GetPeersResponse) GetPeers() []*GetPeersResponse_PeerInfo {
	if m != nil {
		return m.Peers
	}
	return nil
}

type GetPeersResponse_PeerInfo struct {
	Id           int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Address      string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	LocalAddress string `protobuf:"bytes,3,opt,name=local_address,json=localAddress" json:"local_address,omitempty"`
	Version      uint32 `protobuf:"varint,4,opt,name=version" json:"version,omitempty"`
	UserAgent    string `protobuf:"bytes,5,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	// TODO(stevenroose) this is string in current API, why?
	Services             string   `protobuf:"bytes,6,opt,name=services" json:"services,omitempty"`
	Inbound              bool     `protobuf:"varint,7,opt,name=inbound" json:"inbound,omitempty"`
	SyncNode             bool     `protobuf:"varint,8,opt,name=sync_node,json=syncNode" json:"sync_node,omitempty"`
	RelayTxs             bool     `protobuf:"varint,9,opt,name=relay_txs,json=relayTxs" json:"relay_txs,omitempty"`
	LastSendTime         int64    `protobuf:"varint,10,opt,name=last_send_time,json=lastSendTime" json:"last_send_time,omitempty"`
	LastRecvTime         int64    `protobuf:"varint,11,opt,name=last_recv_time,json=lastRecvTime" json:"last_recv_time,omitempty"`
	ConnectionTime       int64    `protobuf:"varint,12,opt,name=connection_time,json=connectionTime" json:"connection_time,omitempty"`
	BytesSent            uint64   `protobuf:"varint,13,opt,name=bytes_sent,json=bytesSent" json:"bytes_sent,omitempty"`
	BytesReceived        uint64   `protobuf:"varint,14,opt,name=bytes_received,json=bytesReceived" json:"bytes_received,omitempty"`
	TimeOffset           int64    `protobuf:"varint,15,opt,name=time_offset,json=timeOffset" json:"time_offset,omitempty"`
	LastPingTime         int64    `protobuf:"varint,16,opt,name=last_ping_time,json=lastPingTime" json:"last_ping_time,omitempty"`
	LastPingMicros       int64    `protobuf:"varint,17,opt,name=last_ping_micros,json=lastPingMicros" json:"last_ping_micros,omitempty"`
	StartingHeight       int32    `protobuf:"varint,18,opt,name=starting_height,json=startingHeight" json:"starting_height,omitempty"`
	CurrentHeight        int32    `protobuf:"varint,19,opt,name=current_height,json=currentHeight" json:"current_height,omitempty"`
	BanScore             int32    `protobuf:"varint,20,opt,name=ban_score,json=banScore" json:"ban_score,omitempty"`
	FeeFilter            int64    `protobuf:"varint,21,opt,name=fee_filter,json=feeFilter" json:"fee_filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPeersResponse_PeerInfo) Reset()         { *m = GetPeersResponse_PeerInfo{} }
func (m *GetPeersResponse_PeerInfo) String() string { return proto.CompactTextString(m) }
func (*GetPeersResponse_PeerInfo) ProtoMessage()    {}
func (*GetPeersResponse_PeerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{42, 0}
}
func (m *GetPeersResponse_PeerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPeersResponse_PeerInfo.Unmarshal(m, b)
}
func (m *GetPeersResponse_PeerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPeersResponse_PeerInfo.Marshal(b, m, deterministic)
}
func (dst *GetPeersResponse_PeerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPeersResponse_PeerInfo.Merge(dst, src)
}
func (m *GetPeersResponse_PeerInfo) XXX_Size() int {
	return xxx_messageInfo_GetPeersResponse_PeerInfo.Size(m)
}
func (m *GetPeersResponse_PeerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPeersResponse_PeerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GetPeersResponse_PeerInfo proto.InternalMessageInfo

func (m *GetPeersResponse_PeerInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetPeersResponse_PeerInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GetPeersResponse_PeerInfo) GetLocalAddress() string {
	if m != nil {
		return m.LocalAddress
	}
	return ""
}

func (m *GetPeersResponse_PeerInfo) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *GetPeersResponse_PeerInfo) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *GetPeersResponse_PeerInfo) GetServices() string {
	if m != nil {
		return m.Services
	}
	return ""
}

func (m *GetPeersResponse_PeerInfo) GetInbound() bool {
	if m != nil {
		return m.Inbound
	}
	return false
}

func (m *GetPeersResponse_PeerInfo) GetSyncNode() bool {
	if m != nil {
		return m.SyncNode
	}
	return false
}

func (m *GetPeersResponse_PeerInfo) GetRelayTxs() bool {
	if m != nil {
		return m.RelayTxs
	}
	return false
}

func (m *GetPeersResponse_PeerInfo) GetLastSendTime() int64 {
	if m != nil {
		return m.LastSendTime
	}
	return 0
}

func (m *GetPeersResponse_PeerInfo) GetLastRecvTime() int64 {
	if m != nil {
		return m.LastRecvTime
	}
	return 0
}

func (m *GetPeersResponse_PeerInfo) GetConnectionTime() int64 {
	if m != nil {
		return m.ConnectionTime
	}
	return 0
}

func (m *GetPeersResponse_PeerInfo) GetBytesSent() uint64 {
	if m != nil {
		return m.BytesSent
	}
	return 0
}

func (m *GetPeersResponse_PeerInfo) GetBytesReceived() uint64 {
	if m != nil {
		return m.BytesReceived
	}
	return 0
}

func (m *GetPeersResponse_PeerInfo) GetTimeOffset() int64 {
	if m != nil {
		return m.TimeOffset
	}
	return 0
}

func (m *GetPeersResponse_PeerInfo) GetLastPingTime() int64 {
	if m != nil {
		return m.LastPingTime
	}
	return 0
}

func (m *GetPeersResponse_PeerInfo) GetLastPingMicros() int64 {
	if m != nil {
		return m.LastPingMicros
	}
	return 0
}

func (m *GetPeersResponse_PeerInfo) GetStartingHeight() int32 {
	if m != nil {
		return m.StartingHeight
	}
	return 0
}

func (m *GetPeersResponse_PeerInfo) GetCurrentHeight() int32 {
	if m != nil {
		return m.CurrentHeight
	}
	return 0
}

func (m *GetPeersResponse_PeerInfo) GetBanScore() int32 {
	if m != nil {
		return m.BanScore
	}
	return 0
}

func (m *GetPeersResponse_PeerInfo) GetFeeFilter() int64 {
	if m != nil {
		return m.FeeFilter
	}
	return 0
}

type GetRawBlockRequest struct {
	Locator              *BlockLocator `protobuf:"bytes,1,opt,name=locator" json:"locator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetRawBlockRequest) Reset()         { *m = GetRawBlockRequest{} }
func (m *GetRawBlockRequest) String() string { return proto.CompactTextString(m) }
func (*GetRawBlockRequest) ProtoMessage()    {}
func (*GetRawBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{43}
}
func (m *GetRawBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRawBlockRequest.Unmarshal(m, b)
}
func (m *GetRawBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRawBlockRequest.Marshal(b, m, deterministic)
}
func (dst *GetRawBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRawBlockRequest.Merge(dst, src)
}
func (m *GetRawBlockRequest) XXX_Size() int {
	return xxx_messageInfo_GetRawBlockRequest.Size(m)
}
func (m *GetRawBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRawBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRawBlockRequest proto.InternalMessageInfo

func (m *GetRawBlockRequest) GetLocator() *BlockLocator {
	if m != nil {
		return m.Locator
	}
	return nil
}

type GetRawBlockResponse struct {
	Block                []byte   `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRawBlockResponse) Reset()         { *m = GetRawBlockResponse{} }
func (m *GetRawBlockResponse) String() string { return proto.CompactTextString(m) }
func (*GetRawBlockResponse) ProtoMessage()    {}
func (*GetRawBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{44}
}
func (m *GetRawBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRawBlockResponse.Unmarshal(m, b)
}
func (m *GetRawBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRawBlockResponse.Marshal(b, m, deterministic)
}
func (dst *GetRawBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRawBlockResponse.Merge(dst, src)
}
func (m *GetRawBlockResponse) XXX_Size() int {
	return xxx_messageInfo_GetRawBlockResponse.Size(m)
}
func (m *GetRawBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRawBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRawBlockResponse proto.InternalMessageInfo

func (m *GetRawBlockResponse) GetBlock() []byte {
	if m != nil {
		return m.Block
	}
	return nil
}

type GetRawMempoolRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRawMempoolRequest) Reset()         { *m = GetRawMempoolRequest{} }
func (m *GetRawMempoolRequest) String() string { return proto.CompactTextString(m) }
func (*GetRawMempoolRequest) ProtoMessage()    {}
func (*GetRawMempoolRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{45}
}
func (m *GetRawMempoolRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRawMempoolRequest.Unmarshal(m, b)
}
func (m *GetRawMempoolRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRawMempoolRequest.Marshal(b, m, deterministic)
}
func (dst *GetRawMempoolRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRawMempoolRequest.Merge(dst, src)
}
func (m *GetRawMempoolRequest) XXX_Size() int {
	return xxx_messageInfo_GetRawMempoolRequest.Size(m)
}
func (m *GetRawMempoolRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRawMempoolRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRawMempoolRequest proto.InternalMessageInfo

type GetRawMempoolResponse struct {
	Transactions         [][]byte `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRawMempoolResponse) Reset()         { *m = GetRawMempoolResponse{} }
func (m *GetRawMempoolResponse) String() string { return proto.CompactTextString(m) }
func (*GetRawMempoolResponse) ProtoMessage()    {}
func (*GetRawMempoolResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{46}
}
func (m *GetRawMempoolResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRawMempoolResponse.Unmarshal(m, b)
}
func (m *GetRawMempoolResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRawMempoolResponse.Marshal(b, m, deterministic)
}
func (dst *GetRawMempoolResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRawMempoolResponse.Merge(dst, src)
}
func (m *GetRawMempoolResponse) XXX_Size() int {
	return xxx_messageInfo_GetRawMempoolResponse.Size(m)
}
func (m *GetRawMempoolResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRawMempoolResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRawMempoolResponse proto.InternalMessageInfo

func (m *GetRawMempoolResponse) GetTransactions() [][]byte {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type GetSystemInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSystemInfoRequest) Reset()         { *m = GetSystemInfoRequest{} }
func (m *GetSystemInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetSystemInfoRequest) ProtoMessage()    {}
func (*GetSystemInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{47}
}
func (m *GetSystemInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSystemInfoRequest.Unmarshal(m, b)
}
func (m *GetSystemInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSystemInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetSystemInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSystemInfoRequest.Merge(dst, src)
}
func (m *GetSystemInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetSystemInfoRequest.Size(m)
}
func (m *GetSystemInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSystemInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSystemInfoRequest proto.InternalMessageInfo

type GetSystemInfoResponse struct {
	Version              uint32   `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	ProtocolVersion      uint32   `protobuf:"varint,2,opt,name=protocol_version,json=protocolVersion" json:"protocol_version,omitempty"`
	CurrentTimeMillis    int64    `protobuf:"varint,3,opt,name=current_time_millis,json=currentTimeMillis" json:"current_time_millis,omitempty"`
	RunningTime          int64    `protobuf:"varint,4,opt,name=running_time,json=runningTime" json:"running_time,omitempty"`
	TotalBytesReceived   uint64   `protobuf:"varint,5,opt,name=total_bytes_received,json=totalBytesReceived" json:"total_bytes_received,omitempty"`
	TotalBytesSent       uint64   `protobuf:"varint,6,opt,name=total_bytes_sent,json=totalBytesSent" json:"total_bytes_sent,omitempty"`
	Proxy                string   `protobuf:"bytes,7,opt,name=proxy" json:"proxy,omitempty"`
	NbConnections        uint32   `protobuf:"varint,8,opt,name=nb_connections,json=nbConnections" json:"nb_connections,omitempty"`
	TxIndex              bool     `protobuf:"varint,9,opt,name=tx_index,json=txIndex" json:"tx_index,omitempty"`
	AddrIndex            bool     `protobuf:"varint,10,opt,name=addr_index,json=addrIndex" json:"addr_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSystemInfoResponse) Reset()         { *m = GetSystemInfoResponse{} }
func (m *GetSystemInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetSystemInfoResponse) ProtoMessage()    {}
func (*GetSystemInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{48}
}
func (m *GetSystemInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSystemInfoResponse.Unmarshal(m, b)
}
func (m *GetSystemInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSystemInfoResponse.Marshal(b, m, deterministic)
}
func (dst *GetSystemInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSystemInfoResponse.Merge(dst, src)
}
func (m *GetSystemInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetSystemInfoResponse.Size(m)
}
func (m *GetSystemInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSystemInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSystemInfoResponse proto.InternalMessageInfo

func (m *GetSystemInfoResponse) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *GetSystemInfoResponse) GetProtocolVersion() uint32 {
	if m != nil {
		return m.ProtocolVersion
	}
	return 0
}

func (m *GetSystemInfoResponse) GetCurrentTimeMillis() int64 {
	if m != nil {
		return m.CurrentTimeMillis
	}
	return 0
}

func (m *GetSystemInfoResponse) GetRunningTime() int64 {
	if m != nil {
		return m.RunningTime
	}
	return 0
}

func (m *GetSystemInfoResponse) GetTotalBytesReceived() uint64 {
	if m != nil {
		return m.TotalBytesReceived
	}
	return 0
}

func (m *GetSystemInfoResponse) GetTotalBytesSent() uint64 {
	if m != nil {
		return m.TotalBytesSent
	}
	return 0
}

func (m *GetSystemInfoResponse) GetProxy() string {
	if m != nil {
		return m.Proxy
	}
	return ""
}

func (m *GetSystemInfoResponse) GetNbConnections() uint32 {
	if m != nil {
		return m.NbConnections
	}
	return 0
}

func (m *GetSystemInfoResponse) GetTxIndex() bool {
	if m != nil {
		return m.TxIndex
	}
	return false
}

func (m *GetSystemInfoResponse) GetAddrIndex() bool {
	if m != nil {
		return m.AddrIndex
	}
	return false
}

type GetTransactionRequest struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionRequest) Reset()         { *m = GetTransactionRequest{} }
func (m *GetTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionRequest) ProtoMessage()    {}
func (*GetTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{49}
}
func (m *GetTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionRequest.Unmarshal(m, b)
}
func (m *GetTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionRequest.Marshal(b, m, deterministic)
}
func (dst *GetTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionRequest.Merge(dst, src)
}
func (m *GetTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransactionRequest.Size(m)
}
func (m *GetTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionRequest proto.InternalMessageInfo

func (m *GetTransactionRequest) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type GetTransactionResponse struct {
	Transaction          *Transaction `protobuf:"bytes,1,opt,name=transaction" json:"transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetTransactionResponse) Reset()         { *m = GetTransactionResponse{} }
func (m *GetTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*GetTransactionResponse) ProtoMessage()    {}
func (*GetTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{50}
}
func (m *GetTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionResponse.Unmarshal(m, b)
}
func (m *GetTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionResponse.Marshal(b, m, deterministic)
}
func (dst *GetTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionResponse.Merge(dst, src)
}
func (m *GetTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_GetTransactionResponse.Size(m)
}
func (m *GetTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionResponse proto.InternalMessageInfo

func (m *GetTransactionResponse) GetTransaction() *Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

type GetRawTransactionResponse struct {
	Transaction          []byte   `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRawTransactionResponse) Reset()         { *m = GetRawTransactionResponse{} }
func (m *GetRawTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*GetRawTransactionResponse) ProtoMessage()    {}
func (*GetRawTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{51}
}
func (m *GetRawTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRawTransactionResponse.Unmarshal(m, b)
}
func (m *GetRawTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRawTransactionResponse.Marshal(b, m, deterministic)
}
func (dst *GetRawTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRawTransactionResponse.Merge(dst, src)
}
func (m *GetRawTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_GetRawTransactionResponse.Size(m)
}
func (m *GetRawTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRawTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRawTransactionResponse proto.InternalMessageInfo

func (m *GetRawTransactionResponse) GetTransaction() []byte {
	if m != nil {
		return m.Transaction
	}
	return nil
}

type RemoveNodeRequest struct {
	PeerAddress          string   `protobuf:"bytes,1,opt,name=peer_address,json=peerAddress" json:"peer_address,omitempty"`
	PeerId               uint32   `protobuf:"varint,2,opt,name=peer_id,json=peerId" json:"peer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveNodeRequest) Reset()         { *m = RemoveNodeRequest{} }
func (m *RemoveNodeRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveNodeRequest) ProtoMessage()    {}
func (*RemoveNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{52}
}
func (m *RemoveNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveNodeRequest.Unmarshal(m, b)
}
func (m *RemoveNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveNodeRequest.Marshal(b, m, deterministic)
}
func (dst *RemoveNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveNodeRequest.Merge(dst, src)
}
func (m *RemoveNodeRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveNodeRequest.Size(m)
}
func (m *RemoveNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveNodeRequest proto.InternalMessageInfo

func (m *RemoveNodeRequest) GetPeerAddress() string {
	if m != nil {
		return m.PeerAddress
	}
	return ""
}

func (m *RemoveNodeRequest) GetPeerId() uint32 {
	if m != nil {
		return m.PeerId
	}
	return 0
}

type RemoveNodeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveNodeResponse) Reset()         { *m = RemoveNodeResponse{} }
func (m *RemoveNodeResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveNodeResponse) ProtoMessage()    {}
func (*RemoveNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{53}
}
func (m *RemoveNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveNodeResponse.Unmarshal(m, b)
}
func (m *RemoveNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveNodeResponse.Marshal(b, m, deterministic)
}
func (dst *RemoveNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveNodeResponse.Merge(dst, src)
}
func (m *RemoveNodeResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveNodeResponse.Size(m)
}
func (m *RemoveNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveNodeResponse proto.InternalMessageInfo

type RescanBlocksRequest struct {
	Blocks               []*BlockLocator `protobuf:"bytes,1,rep,name=blocks" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RescanBlocksRequest) Reset()         { *m = RescanBlocksRequest{} }
func (m *RescanBlocksRequest) String() string { return proto.CompactTextString(m) }
func (*RescanBlocksRequest) ProtoMessage()    {}
func (*RescanBlocksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{54}
}
func (m *RescanBlocksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RescanBlocksRequest.Unmarshal(m, b)
}
func (m *RescanBlocksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RescanBlocksRequest.Marshal(b, m, deterministic)
}
func (dst *RescanBlocksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RescanBlocksRequest.Merge(dst, src)
}
func (m *RescanBlocksRequest) XXX_Size() int {
	return xxx_messageInfo_RescanBlocksRequest.Size(m)
}
func (m *RescanBlocksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RescanBlocksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RescanBlocksRequest proto.InternalMessageInfo

func (m *RescanBlocksRequest) GetBlocks() []*BlockLocator {
	if m != nil {
		return m.Blocks
	}
	return nil
}

type ScanTransactionsRequest struct {
	StartBlock           *BlockLocator      `protobuf:"bytes,1,opt,name=start_block,json=startBlock" json:"start_block,omitempty"`
	StopBlock            *BlockLocator      `protobuf:"bytes,2,opt,name=stop_block,json=stopBlock" json:"stop_block,omitempty"`
	Filter               *TransactionFilter `protobuf:"bytes,3,opt,name=filter" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ScanTransactionsRequest) Reset()         { *m = ScanTransactionsRequest{} }
func (m *ScanTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*ScanTransactionsRequest) ProtoMessage()    {}
func (*ScanTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{55}
}
func (m *ScanTransactionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanTransactionsRequest.Unmarshal(m, b)
}
func (m *ScanTransactionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanTransactionsRequest.Marshal(b, m, deterministic)
}
func (dst *ScanTransactionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanTransactionsRequest.Merge(dst, src)
}
func (m *ScanTransactionsRequest) XXX_Size() int {
	return xxx_messageInfo_ScanTransactionsRequest.Size(m)
}
func (m *ScanTransactionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanTransactionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScanTransactionsRequest proto.InternalMessageInfo

func (m *ScanTransactionsRequest) GetStartBlock() *BlockLocator {
	if m != nil {
		return m.StartBlock
	}
	return nil
}

func (m *ScanTransactionsRequest) GetStopBlock() *BlockLocator {
	if m != nil {
		return m.StopBlock
	}
	return nil
}

func (m *ScanTransactionsRequest) GetFilter() *TransactionFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

type ScanTransactionsUpdate struct {
	BlockHeight int32 `protobuf:"varint,1,opt,name=block_height,json=blockHeight" json:"block_height,omitempty"`
	// This field can be empty.  In that case, the update is just a progress
	// update.
	Transaction          *Transaction `protobuf:"bytes,2,opt,name=transaction" json:"transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ScanTransactionsUpdate) Reset()         { *m = ScanTransactionsUpdate{} }
func (m *ScanTransactionsUpdate) String() string { return proto.CompactTextString(m) }
func (*ScanTransactionsUpdate) ProtoMessage()    {}
func (*ScanTransactionsUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{56}
}
func (m *ScanTransactionsUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanTransactionsUpdate.Unmarshal(m, b)
}
func (m *ScanTransactionsUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanTransactionsUpdate.Marshal(b, m, deterministic)
}
func (dst *ScanTransactionsUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanTransactionsUpdate.Merge(dst, src)
}
func (m *ScanTransactionsUpdate) XXX_Size() int {
	return xxx_messageInfo_ScanTransactionsUpdate.Size(m)
}
func (m *ScanTransactionsUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanTransactionsUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_ScanTransactionsUpdate proto.InternalMessageInfo

func (m *ScanTransactionsUpdate) GetBlockHeight() int32 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *ScanTransactionsUpdate) GetTransaction() *Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

type ScanRawTransactionsUpdate struct {
	BlockHeight int32 `protobuf:"varint,1,opt,name=block_height,json=blockHeight" json:"block_height,omitempty"`
	// This field can be empty.  In that case, the update is just a progress
	// update.
	Transaction          []byte   `protobuf:"bytes,2,opt,name=transaction,proto3" json:"transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScanRawTransactionsUpdate) Reset()         { *m = ScanRawTransactionsUpdate{} }
func (m *ScanRawTransactionsUpdate) String() string { return proto.CompactTextString(m) }
func (*ScanRawTransactionsUpdate) ProtoMessage()    {}
func (*ScanRawTransactionsUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{57}
}
func (m *ScanRawTransactionsUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanRawTransactionsUpdate.Unmarshal(m, b)
}
func (m *ScanRawTransactionsUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanRawTransactionsUpdate.Marshal(b, m, deterministic)
}
func (dst *ScanRawTransactionsUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanRawTransactionsUpdate.Merge(dst, src)
}
func (m *ScanRawTransactionsUpdate) XXX_Size() int {
	return xxx_messageInfo_ScanRawTransactionsUpdate.Size(m)
}
func (m *ScanRawTransactionsUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanRawTransactionsUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_ScanRawTransactionsUpdate proto.InternalMessageInfo

func (m *ScanRawTransactionsUpdate) GetBlockHeight() int32 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *ScanRawTransactionsUpdate) GetTransaction() []byte {
	if m != nil {
		return m.Transaction
	}
	return nil
}

type SearchTransactionsRequest struct {
	Address string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Skip    int32  `protobuf:"varint,2,opt,name=skip" json:"skip,omitempty"`
	Limit   int32  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	// Provide the transactions in encoded form.
	Encoded              bool     `protobuf:"varint,4,opt,name=encoded" json:"encoded,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchTransactionsRequest) Reset()         { *m = SearchTransactionsRequest{} }
func (m *SearchTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchTransactionsRequest) ProtoMessage()    {}
func (*SearchTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{58}
}
func (m *SearchTransactionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchTransactionsRequest.Unmarshal(m, b)
}
func (m *SearchTransactionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchTransactionsRequest.Marshal(b, m, deterministic)
}
func (dst *SearchTransactionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchTransactionsRequest.Merge(dst, src)
}
func (m *SearchTransactionsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchTransactionsRequest.Size(m)
}
func (m *SearchTransactionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchTransactionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchTransactionsRequest proto.InternalMessageInfo

func (m *SearchTransactionsRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *SearchTransactionsRequest) GetSkip() int32 {
	if m != nil {
		return m.Skip
	}
	return 0
}

func (m *SearchTransactionsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SearchTransactionsRequest) GetEncoded() bool {
	if m != nil {
		return m.Encoded
	}
	return false
}

type SearchTransactionsResponse struct {
	Transactions         []*Transaction `protobuf:"bytes,1,rep,name=transactions" json:"transactions,omitempty"`
	Encoded              [][]byte       `protobuf:"bytes,2,rep,name=encoded,proto3" json:"encoded,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SearchTransactionsResponse) Reset()         { *m = SearchTransactionsResponse{} }
func (m *SearchTransactionsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchTransactionsResponse) ProtoMessage()    {}
func (*SearchTransactionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{59}
}
func (m *SearchTransactionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchTransactionsResponse.Unmarshal(m, b)
}
func (m *SearchTransactionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchTransactionsResponse.Marshal(b, m, deterministic)
}
func (dst *SearchTransactionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchTransactionsResponse.Merge(dst, src)
}
func (m *SearchTransactionsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchTransactionsResponse.Size(m)
}
func (m *SearchTransactionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchTransactionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchTransactionsResponse proto.InternalMessageInfo

func (m *SearchTransactionsResponse) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *SearchTransactionsResponse) GetEncoded() [][]byte {
	if m != nil {
		return m.Encoded
	}
	return nil
}

type SetDebugLevelRequest struct {
	Level                SetDebugLevelRequest_DebugLevel `protobuf:"varint,1,opt,name=level,enum=btcrpc.SetDebugLevelRequest_DebugLevel" json:"level,omitempty"`
	Subsystem            SetDebugLevelRequest_Subsystem  `protobuf:"varint,2,opt,name=subsystem,enum=btcrpc.SetDebugLevelRequest_Subsystem" json:"subsystem,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *SetDebugLevelRequest) Reset()         { *m = SetDebugLevelRequest{} }
func (m *SetDebugLevelRequest) String() string { return proto.CompactTextString(m) }
func (*SetDebugLevelRequest) ProtoMessage()    {}
func (*SetDebugLevelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{60}
}
func (m *SetDebugLevelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetDebugLevelRequest.Unmarshal(m, b)
}
func (m *SetDebugLevelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetDebugLevelRequest.Marshal(b, m, deterministic)
}
func (dst *SetDebugLevelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetDebugLevelRequest.Merge(dst, src)
}
func (m *SetDebugLevelRequest) XXX_Size() int {
	return xxx_messageInfo_SetDebugLevelRequest.Size(m)
}
func (m *SetDebugLevelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetDebugLevelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetDebugLevelRequest proto.InternalMessageInfo

func (m *SetDebugLevelRequest) GetLevel() SetDebugLevelRequest_DebugLevel {
	if m != nil {
		return m.Level
	}
	return SetDebugLevelRequest_TRACE
}

func (m *SetDebugLevelRequest) GetSubsystem() SetDebugLevelRequest_Subsystem {
	if m != nil {
		return m.Subsystem
	}
	return SetDebugLevelRequest_ALL
}

type SetDebugLevelResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetDebugLevelResponse) Reset()         { *m = SetDebugLevelResponse{} }
func (m *SetDebugLevelResponse) String() string { return proto.CompactTextString(m) }
func (*SetDebugLevelResponse) ProtoMessage()    {}
func (*SetDebugLevelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{61}
}
func (m *SetDebugLevelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetDebugLevelResponse.Unmarshal(m, b)
}
func (m *SetDebugLevelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetDebugLevelResponse.Marshal(b, m, deterministic)
}
func (dst *SetDebugLevelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetDebugLevelResponse.Merge(dst, src)
}
func (m *SetDebugLevelResponse) XXX_Size() int {
	return xxx_messageInfo_SetDebugLevelResponse.Size(m)
}
func (m *SetDebugLevelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetDebugLevelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetDebugLevelResponse proto.InternalMessageInfo

type SetGenerateRequest struct {
	Generate bool `protobuf:"varint,1,opt,name=generate" json:"generate,omitempty"`
	// TODO(stevenroose) since mining is only done is regtest, does this still make sense?
	//  I would think this better be moved to the regtest service
	NbWorkers            int32    `protobuf:"varint,2,opt,name=nb_workers,json=nbWorkers" json:"nb_workers,omitempty"`
	PayoutAddress        string   `protobuf:"bytes,3,opt,name=payout_address,json=payoutAddress" json:"payout_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetGenerateRequest) Reset()         { *m = SetGenerateRequest{} }
func (m *SetGenerateRequest) String() string { return proto.CompactTextString(m) }
func (*SetGenerateRequest) ProtoMessage()    {}
func (*SetGenerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{62}
}
func (m *SetGenerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetGenerateRequest.Unmarshal(m, b)
}
func (m *SetGenerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetGenerateRequest.Marshal(b, m, deterministic)
}
func (dst *SetGenerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetGenerateRequest.Merge(dst, src)
}
func (m *SetGenerateRequest) XXX_Size() int {
	return xxx_messageInfo_SetGenerateRequest.Size(m)
}
func (m *SetGenerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetGenerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetGenerateRequest proto.InternalMessageInfo

func (m *SetGenerateRequest) GetGenerate() bool {
	if m != nil {
		return m.Generate
	}
	return false
}

func (m *SetGenerateRequest) GetNbWorkers() int32 {
	if m != nil {
		return m.NbWorkers
	}
	return 0
}

func (m *SetGenerateRequest) GetPayoutAddress() string {
	if m != nil {
		return m.PayoutAddress
	}
	return ""
}

type SetGenerateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetGenerateResponse) Reset()         { *m = SetGenerateResponse{} }
func (m *SetGenerateResponse) String() string { return proto.CompactTextString(m) }
func (*SetGenerateResponse) ProtoMessage()    {}
func (*SetGenerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{63}
}
func (m *SetGenerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetGenerateResponse.Unmarshal(m, b)
}
func (m *SetGenerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetGenerateResponse.Marshal(b, m, deterministic)
}
func (dst *SetGenerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetGenerateResponse.Merge(dst, src)
}
func (m *SetGenerateResponse) XXX_Size() int {
	return xxx_messageInfo_SetGenerateResponse.Size(m)
}
func (m *SetGenerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetGenerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetGenerateResponse proto.InternalMessageInfo

type StopDaemonRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopDaemonRequest) Reset()         { *m = StopDaemonRequest{} }
func (m *StopDaemonRequest) String() string { return proto.CompactTextString(m) }
func (*StopDaemonRequest) ProtoMessage()    {}
func (*StopDaemonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{64}
}
func (m *StopDaemonRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopDaemonRequest.Unmarshal(m, b)
}
func (m *StopDaemonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopDaemonRequest.Marshal(b, m, deterministic)
}
func (dst *StopDaemonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopDaemonRequest.Merge(dst, src)
}
func (m *StopDaemonRequest) XXX_Size() int {
	return xxx_messageInfo_StopDaemonRequest.Size(m)
}
func (m *StopDaemonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopDaemonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopDaemonRequest proto.InternalMessageInfo

type StopDaemonResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopDaemonResponse) Reset()         { *m = StopDaemonResponse{} }
func (m *StopDaemonResponse) String() string { return proto.CompactTextString(m) }
func (*StopDaemonResponse) ProtoMessage()    {}
func (*StopDaemonResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{65}
}
func (m *StopDaemonResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopDaemonResponse.Unmarshal(m, b)
}
func (m *StopDaemonResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopDaemonResponse.Marshal(b, m, deterministic)
}
func (dst *StopDaemonResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopDaemonResponse.Merge(dst, src)
}
func (m *StopDaemonResponse) XXX_Size() int {
	return xxx_messageInfo_StopDaemonResponse.Size(m)
}
func (m *StopDaemonResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopDaemonResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopDaemonResponse proto.InternalMessageInfo

type SubmitTransactionRequest struct {
	Transaction          []byte   `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitTransactionRequest) Reset()         { *m = SubmitTransactionRequest{} }
func (m *SubmitTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitTransactionRequest) ProtoMessage()    {}
func (*SubmitTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{66}
}
func (m *SubmitTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitTransactionRequest.Unmarshal(m, b)
}
func (m *SubmitTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitTransactionRequest.Marshal(b, m, deterministic)
}
func (dst *SubmitTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitTransactionRequest.Merge(dst, src)
}
func (m *SubmitTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitTransactionRequest.Size(m)
}
func (m *SubmitTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitTransactionRequest proto.InternalMessageInfo

func (m *SubmitTransactionRequest) GetTransaction() []byte {
	if m != nil {
		return m.Transaction
	}
	return nil
}

type SubmitTransactionResponse struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitTransactionResponse) Reset()         { *m = SubmitTransactionResponse{} }
func (m *SubmitTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*SubmitTransactionResponse) ProtoMessage()    {}
func (*SubmitTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{67}
}
func (m *SubmitTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitTransactionResponse.Unmarshal(m, b)
}
func (m *SubmitTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitTransactionResponse.Marshal(b, m, deterministic)
}
func (dst *SubmitTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitTransactionResponse.Merge(dst, src)
}
func (m *SubmitTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_SubmitTransactionResponse.Size(m)
}
func (m *SubmitTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitTransactionResponse proto.InternalMessageInfo

func (m *SubmitTransactionResponse) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type SubmitBlockRequest struct {
	Block                []byte   `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitBlockRequest) Reset()         { *m = SubmitBlockRequest{} }
func (m *SubmitBlockRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitBlockRequest) ProtoMessage()    {}
func (*SubmitBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{68}
}
func (m *SubmitBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitBlockRequest.Unmarshal(m, b)
}
func (m *SubmitBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitBlockRequest.Marshal(b, m, deterministic)
}
func (dst *SubmitBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitBlockRequest.Merge(dst, src)
}
func (m *SubmitBlockRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitBlockRequest.Size(m)
}
func (m *SubmitBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitBlockRequest proto.InternalMessageInfo

func (m *SubmitBlockRequest) GetBlock() []byte {
	if m != nil {
		return m.Block
	}
	return nil
}

type SubmitBlockResponse struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitBlockResponse) Reset()         { *m = SubmitBlockResponse{} }
func (m *SubmitBlockResponse) String() string { return proto.CompactTextString(m) }
func (*SubmitBlockResponse) ProtoMessage()    {}
func (*SubmitBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{69}
}
func (m *SubmitBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitBlockResponse.Unmarshal(m, b)
}
func (m *SubmitBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitBlockResponse.Marshal(b, m, deterministic)
}
func (dst *SubmitBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitBlockResponse.Merge(dst, src)
}
func (m *SubmitBlockResponse) XXX_Size() int {
	return xxx_messageInfo_SubmitBlockResponse.Size(m)
}
func (m *SubmitBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitBlockResponse proto.InternalMessageInfo

func (m *SubmitBlockResponse) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type SubscribeBlocksRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeBlocksRequest) Reset()         { *m = SubscribeBlocksRequest{} }
func (m *SubscribeBlocksRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeBlocksRequest) ProtoMessage()    {}
func (*SubscribeBlocksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{70}
}
func (m *SubscribeBlocksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeBlocksRequest.Unmarshal(m, b)
}
func (m *SubscribeBlocksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeBlocksRequest.Marshal(b, m, deterministic)
}
func (dst *SubscribeBlocksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeBlocksRequest.Merge(dst, src)
}
func (m *SubscribeBlocksRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeBlocksRequest.Size(m)
}
func (m *SubscribeBlocksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeBlocksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeBlocksRequest proto.InternalMessageInfo

type SubscribeTransactionsRequest struct {
	Subscribe   *TransactionFilter `protobuf:"bytes,1,opt,name=subscribe" json:"subscribe,omitempty"`
	Unsubscribe *TransactionFilter `protobuf:"bytes,2,opt,name=unsubscribe" json:"unsubscribe,omitempty"`
	// When this is true, also new transactions coming in from the mempool are
	// included apart from the ones confirmed in a block.  These transactions
	// will be sent again when they are confirmed.
	IncludeMempool       bool     `protobuf:"varint,3,opt,name=include_mempool,json=includeMempool" json:"include_mempool,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeTransactionsRequest) Reset()         { *m = SubscribeTransactionsRequest{} }
func (m *SubscribeTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeTransactionsRequest) ProtoMessage()    {}
func (*SubscribeTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_btcrpc_acc32e149c79c7d6, []int{71}
}
func (m *SubscribeTransactionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeTransactionsRequest.Unmarshal(m, b)
}
func (m *SubscribeTransactionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeTransactionsRequest.Marshal(b, m, deterministic)
}
func (dst *SubscribeTransactionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeTransactionsRequest.Merge(dst, src)
}
func (m *SubscribeTransactionsRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeTransactionsRequest.Size(m)
}
func (m *SubscribeTransactionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeTransactionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeTransactionsRequest proto.InternalMessageInfo

func (m *SubscribeTransactionsRequest) GetSubscribe() *TransactionFilter {
	if m != nil {
		return m.Subscribe
	}
	return nil
}

func (m *SubscribeTransactionsRequest) GetUnsubscribe() *TransactionFilter {
	if m != nil {
		return m.Unsubscribe
	}
	return nil
}

func (m *SubscribeTransactionsRequest) GetIncludeMempool() bool {
	if m != nil {
		return m.IncludeMempool
	}
	return false
}

func init() {
	proto.RegisterType((*Block)(nil), "btcrpc.Block")
	proto.RegisterType((*BlockInfo)(nil), "btcrpc.BlockInfo")
	proto.RegisterType((*BlockLocator)(nil), "btcrpc.BlockLocator")
	proto.RegisterType((*MempoolTransaction)(nil), "btcrpc.MempoolTransaction")
	proto.RegisterType((*Transaction)(nil), "btcrpc.Transaction")
	proto.RegisterType((*Transaction_Input)(nil), "btcrpc.Transaction.Input")
	proto.RegisterType((*Transaction_Input_Outpoint)(nil), "btcrpc.Transaction.Input.Outpoint")
	proto.RegisterType((*Transaction_Output)(nil), "btcrpc.Transaction.Output")
	proto.RegisterType((*TransactionFilter)(nil), "btcrpc.TransactionFilter")
	proto.RegisterType((*UnspentOutput)(nil), "btcrpc.UnspentOutput")
	proto.RegisterType((*BlockNotification)(nil), "btcrpc.BlockNotification")
	proto.RegisterType((*RawTransactionNotification)(nil), "btcrpc.RawTransactionNotification")
	proto.RegisterType((*TransactionNotification)(nil), "btcrpc.TransactionNotification")
	proto.RegisterType((*CalculateNetworkHashRateRequest)(nil), "btcrpc.CalculateNetworkHashRateRequest")
	proto.RegisterType((*CalculateNetworkHashRateResponse)(nil), "btcrpc.CalculateNetworkHashRateResponse")
	proto.RegisterType((*ConnectPeerRequest)(nil), "btcrpc.ConnectPeerRequest")
	proto.RegisterType((*ConnectPeerResponse)(nil), "btcrpc.ConnectPeerResponse")
	proto.RegisterType((*DisconnectPeerRequest)(nil), "btcrpc.DisconnectPeerRequest")
	proto.RegisterType((*DisconnectPeerResponse)(nil), "btcrpc.DisconnectPeerResponse")
	proto.RegisterType((*GenerateBlocksRequest)(nil), "btcrpc.GenerateBlocksRequest")
	proto.RegisterType((*GenerateBlocksResponse)(nil), "btcrpc.GenerateBlocksResponse")
	proto.RegisterType((*GetAddressTransactionsRequest)(nil), "btcrpc.GetAddressTransactionsRequest")
	proto.RegisterType((*GetAddressTransactionsResponse)(nil), "btcrpc.GetAddressTransactionsResponse")
	proto.RegisterType((*GetRawAddressTransactionsResponse)(nil), "btcrpc.GetRawAddressTransactionsResponse")
	proto.RegisterType((*GetAddressUnspentOutputsRequest)(nil), "btcrpc.GetAddressUnspentOutputsRequest")
	proto.RegisterType((*GetAddressUnspentOutputsResponse)(nil), "btcrpc.GetAddressUnspentOutputsResponse")
	proto.RegisterType((*GetBestBlockInfoRequest)(nil), "btcrpc.GetBestBlockInfoRequest")
	proto.RegisterType((*GetBestBlockInfoResponse)(nil), "btcrpc.GetBestBlockInfoResponse")
	proto.RegisterType((*GetBlockRequest)(nil), "btcrpc.GetBlockRequest")
	proto.RegisterType((*GetBlockResponse)(nil), "btcrpc.GetBlockResponse")
	proto.RegisterType((*GetBlockCountRequest)(nil), "btcrpc.GetBlockCountRequest")
	proto.RegisterType((*GetBlockCountResponse)(nil), "btcrpc.GetBlockCountResponse")
	proto.RegisterType((*GetBlockInfoRequest)(nil), "btcrpc.GetBlockInfoRequest")
	proto.RegisterType((*GetBlockInfoResponse)(nil), "btcrpc.GetBlockInfoResponse")
	proto.RegisterType((*GetGenerateInfoRequest)(nil), "btcrpc.GetGenerateInfoRequest")
	proto.RegisterType((*GetGenerateInfoResponse)(nil), "btcrpc.GetGenerateInfoResponse")
	proto.RegisterType((*GetMempoolRequest)(nil), "btcrpc.GetMempoolRequest")
	proto.RegisterType((*GetMempoolResponse)(nil), "btcrpc.GetMempoolResponse")
	proto.RegisterType((*GetMempoolInfoRequest)(nil), "btcrpc.GetMempoolInfoRequest")
	proto.RegisterType((*GetMempoolInfoResponse)(nil), "btcrpc.GetMempoolInfoResponse")
	proto.RegisterType((*GetMiningInfoRequest)(nil), "btcrpc.GetMiningInfoRequest")
	proto.RegisterType((*GetMiningInfoResponse)(nil), "btcrpc.GetMiningInfoResponse")
	proto.RegisterType((*GetNetworkInfoRequest)(nil), "btcrpc.GetNetworkInfoRequest")
	proto.RegisterType((*GetNetworkInfoResponse)(nil), "btcrpc.GetNetworkInfoResponse")
	proto.RegisterType((*GetPeersRequest)(nil), "btcrpc.GetPeersRequest")
	proto.RegisterType((*GetPeersResponse)(nil), "btcrpc.GetPeersResponse")
	proto.RegisterType((*GetPeersResponse_PeerInfo)(nil), "btcrpc.GetPeersResponse.PeerInfo")
	proto.RegisterType((*GetRawBlockRequest)(nil), "btcrpc.GetRawBlockRequest")
	proto.RegisterType((*GetRawBlockResponse)(nil), "btcrpc.GetRawBlockResponse")
	proto.RegisterType((*GetRawMempoolRequest)(nil), "btcrpc.GetRawMempoolRequest")
	proto.RegisterType((*GetRawMempoolResponse)(nil), "btcrpc.GetRawMempoolResponse")
	proto.RegisterType((*GetSystemInfoRequest)(nil), "btcrpc.GetSystemInfoRequest")
	proto.RegisterType((*GetSystemInfoResponse)(nil), "btcrpc.GetSystemInfoResponse")
	proto.RegisterType((*GetTransactionRequest)(nil), "btcrpc.GetTransactionRequest")
	proto.RegisterType((*GetTransactionResponse)(nil), "btcrpc.GetTransactionResponse")
	proto.RegisterType((*GetRawTransactionResponse)(nil), "btcrpc.GetRawTransactionResponse")
	proto.RegisterType((*RemoveNodeRequest)(nil), "btcrpc.RemoveNodeRequest")
	proto.RegisterType((*RemoveNodeResponse)(nil), "btcrpc.RemoveNodeResponse")
	proto.RegisterType((*RescanBlocksRequest)(nil), "btcrpc.RescanBlocksRequest")
	proto.RegisterType((*ScanTransactionsRequest)(nil), "btcrpc.ScanTransactionsRequest")
	proto.RegisterType((*ScanTransactionsUpdate)(nil), "btcrpc.ScanTransactionsUpdate")
	proto.RegisterType((*ScanRawTransactionsUpdate)(nil), "btcrpc.ScanRawTransactionsUpdate")
	proto.RegisterType((*SearchTransactionsRequest)(nil), "btcrpc.SearchTransactionsRequest")
	proto.RegisterType((*SearchTransactionsResponse)(nil), "btcrpc.SearchTransactionsResponse")
	proto.RegisterType((*SetDebugLevelRequest)(nil), "btcrpc.SetDebugLevelRequest")
	proto.RegisterType((*SetDebugLevelResponse)(nil), "btcrpc.SetDebugLevelResponse")
	proto.RegisterType((*SetGenerateRequest)(nil), "btcrpc.SetGenerateRequest")
	proto.RegisterType((*SetGenerateResponse)(nil), "btcrpc.SetGenerateResponse")
	proto.RegisterType((*StopDaemonRequest)(nil), "btcrpc.StopDaemonRequest")
	proto.RegisterType((*StopDaemonResponse)(nil), "btcrpc.StopDaemonResponse")
	proto.RegisterType((*SubmitTransactionRequest)(nil), "btcrpc.SubmitTransactionRequest")
	proto.RegisterType((*SubmitTransactionResponse)(nil), "btcrpc.SubmitTransactionResponse")
	proto.RegisterType((*SubmitBlockRequest)(nil), "btcrpc.SubmitBlockRequest")
	proto.RegisterType((*SubmitBlockResponse)(nil), "btcrpc.SubmitBlockResponse")
	proto.RegisterType((*SubscribeBlocksRequest)(nil), "btcrpc.SubscribeBlocksRequest")
	proto.RegisterType((*SubscribeTransactionsRequest)(nil), "btcrpc.SubscribeTransactionsRequest")
	proto.RegisterEnum("btcrpc.BlockNotification_Type", BlockNotification_Type_name, BlockNotification_Type_value)
	proto.RegisterEnum("btcrpc.TransactionNotification_Type", TransactionNotification_Type_name, TransactionNotification_Type_value)
	proto.RegisterEnum("btcrpc.GetNetworkInfoResponse_BitcoinNet", GetNetworkInfoResponse_BitcoinNet_name, GetNetworkInfoResponse_BitcoinNet_value)
	proto.RegisterEnum("btcrpc.SetDebugLevelRequest_DebugLevel", SetDebugLevelRequest_DebugLevel_name, SetDebugLevelRequest_DebugLevel_value)
	proto.RegisterEnum("btcrpc.SetDebugLevelRequest_Subsystem", SetDebugLevelRequest_Subsystem_name, SetDebugLevelRequest_Subsystem_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Btcd service

type BtcdClient interface {
	// Get various system and runtime-related info.
	GetSystemInfo(ctx context.Context, in *GetSystemInfoRequest, opts ...grpc.CallOption) (*GetSystemInfoResponse, error)
	// Set the debug level of the daemon.
	SetDebugLevel(ctx context.Context, in *SetDebugLevelRequest, opts ...grpc.CallOption) (*SetDebugLevelResponse, error)
	// Stop the daemon.
	StopDaemon(ctx context.Context, in *StopDaemonRequest, opts ...grpc.CallOption) (*StopDaemonResponse, error)
	// Get various state info.
	// TODO(stevenroose) merge with GetSystemInfo into GetInfo maybe?
	GetNetworkInfo(ctx context.Context, in *GetNetworkInfoRequest, opts ...grpc.CallOption) (*GetNetworkInfoResponse, error)
	// Get the total hashrate of the network.
	CalculateNetworkHashRate(ctx context.Context, in *CalculateNetworkHashRateRequest, opts ...grpc.CallOption) (*CalculateNetworkHashRateResponse, error)
	// Get info about the mempool.
	GetMempoolInfo(ctx context.Context, in *GetMempoolInfoRequest, opts ...grpc.CallOption) (*GetMempoolInfoResponse, error)
	// Get the transactions in the mempool.
	GetMempool(ctx context.Context, in *GetMempoolRequest, opts ...grpc.CallOption) (*GetMempoolResponse, error)
	// Get all mempool transactions in serialized format.
	// TODO(stevenroose) should this be a streaming response because of the size?
	GetRawMempool(ctx context.Context, in *GetRawMempoolRequest, opts ...grpc.CallOption) (*GetRawMempoolResponse, error)
	// Get info about the most recent block in the longest blockchain.
	GetBestBlockInfo(ctx context.Context, in *GetBestBlockInfoRequest, opts ...grpc.CallOption) (*GetBestBlockInfoResponse, error)
	// Get info about the given block.
	GetBlockInfo(ctx context.Context, in *GetBlockInfoRequest, opts ...grpc.CallOption) (*GetBlockInfoResponse, error)
	// Get a block.
	GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockResponse, error)
	// Get a serialized block.
	GetRawBlock(ctx context.Context, in *GetRawBlockRequest, opts ...grpc.CallOption) (*GetRawBlockResponse, error)
	// Submit the block to all connected peers.
	SubmitBlock(ctx context.Context, in *SubmitBlockRequest, opts ...grpc.CallOption) (*SubmitBlockResponse, error)
	// Get a transaction given its hash.
	// This call requires the transaction index to be enabled to be able to
	// find transactions that are noto in the mempool.
	GetTransaction(ctx context.Context, in *GetTransactionRequest, opts ...grpc.CallOption) (*GetTransactionResponse, error)
	// Get a serialized transaction given its hash.
	// This call requires the transaction index to be enabled to be able to
	// find transactions that are noto in the mempool.
	GetRawTransaction(ctx context.Context, in *GetTransactionRequest, opts ...grpc.CallOption) (*GetRawTransactionResponse, error)
	// Scan part of the blockchain for relevant transactions.
	ScanTransactions(ctx context.Context, in *ScanTransactionsRequest, opts ...grpc.CallOption) (Btcd_ScanTransactionsClient, error)
	// Scan part of the blockchain for relevant transactions.
	ScanRawTransactions(ctx context.Context, in *ScanTransactionsRequest, opts ...grpc.CallOption) (Btcd_ScanRawTransactionsClient, error)
	// Submit a transaction to all connected peers.
	SubmitTransaction(ctx context.Context, in *SubmitTransactionRequest, opts ...grpc.CallOption) (*SubmitTransactionResponse, error)
	// Returns all known transactions for the given address.
	//
	// This method requires the address and transaction index.
	GetAddressTransactions(ctx context.Context, in *GetAddressTransactionsRequest, opts ...grpc.CallOption) (*GetAddressTransactionsResponse, error)
	// Returns all known transactions for the given address.
	//
	// This method requires the address and transaction index.
	GetRawAddressTransactions(ctx context.Context, in *GetAddressTransactionsRequest, opts ...grpc.CallOption) (*GetRawAddressTransactionsResponse, error)
	// Returns all the unspent transaction outpoints for the given address.
	//
	// This method requires the address and transaction index.
	GetAddressUnspentOutputs(ctx context.Context, in *GetAddressUnspentOutputsRequest, opts ...grpc.CallOption) (*GetAddressUnspentOutputsResponse, error)
	// Subscribe to relevant transactions based on the subscription requests.
	// The parameters to filter transactions on can be updated by sending new
	// SubscribeTransactionsRequest objects on the stream.
	SubscribeTransactions(ctx context.Context, opts ...grpc.CallOption) (Btcd_SubscribeTransactionsClient, error)
	// Subscribe to relevant transactions based on the subscription requests.
	// The parameters to filter transactions on can be updated by sending new
	// SubscribeTransactionsRequest objects on the stream.
	SubscribeRawTransactions(ctx context.Context, opts ...grpc.CallOption) (Btcd_SubscribeRawTransactionsClient, error)
	// Subscribe to notifications of new blocks being connected to the blockchain
	// or blocks being disconnected.
	SubscribeBlocks(ctx context.Context, in *SubscribeBlocksRequest, opts ...grpc.CallOption) (Btcd_SubscribeBlocksClient, error)
	// Get info about the peers this node is connected to.
	// Set permanent to get the permanent peer list.
	GetPeers(ctx context.Context, in *GetPeersRequest, opts ...grpc.CallOption) (*GetPeersResponse, error)
	// Connect to a new peer.
	// Set permanent to true to add to permanent peer list.
	// TODO(stevenroose) is it worth/possible to have a flag to make it a blocking
	// call with a success flag
	ConnectPeer(ctx context.Context, in *ConnectPeerRequest, opts ...grpc.CallOption) (*ConnectPeerResponse, error)
	// Disconnect from a peer.
	// Set permanent to true to remove from permanent peer list.
	DisconnectPeer(ctx context.Context, in *DisconnectPeerRequest, opts ...grpc.CallOption) (*DisconnectPeerResponse, error)
	// Get info related to the miner.
	GetMiningInfo(ctx context.Context, in *GetMiningInfoRequest, opts ...grpc.CallOption) (*GetMiningInfoResponse, error)
}

type btcdClient struct {
	cc *grpc.ClientConn
}

func NewBtcdClient(cc *grpc.ClientConn) BtcdClient {
	return &btcdClient{cc}
}

func (c *btcdClient) GetSystemInfo(ctx context.Context, in *GetSystemInfoRequest, opts ...grpc.CallOption) (*GetSystemInfoResponse, error) {
	out := new(GetSystemInfoResponse)
	err := grpc.Invoke(ctx, "/btcrpc.btcd/GetSystemInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *btcdClient) SetDebugLevel(ctx context.Context, in *SetDebugLevelRequest, opts ...grpc.CallOption) (*SetDebugLevelResponse, error) {
	out := new(SetDebugLevelResponse)
	err := grpc.Invoke(ctx, "/btcrpc.btcd/SetDebugLevel", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *btcdClient) StopDaemon(ctx context.Context, in *StopDaemonRequest, opts ...grpc.CallOption) (*StopDaemonResponse, error) {
	out := new(StopDaemonResponse)
	err := grpc.Invoke(ctx, "/btcrpc.btcd/StopDaemon", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *btcdClient) GetNetworkInfo(ctx context.Context, in *GetNetworkInfoRequest, opts ...grpc.CallOption) (*GetNetworkInfoResponse, error) {
	out := new(GetNetworkInfoResponse)
	err := grpc.Invoke(ctx, "/btcrpc.btcd/GetNetworkInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *btcdClient) CalculateNetworkHashRate(ctx context.Context, in *CalculateNetworkHashRateRequest, opts ...grpc.CallOption) (*CalculateNetworkHashRateResponse, error) {
	out := new(CalculateNetworkHashRateResponse)
	err := grpc.Invoke(ctx, "/btcrpc.btcd/CalculateNetworkHashRate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *btcdClient) GetMempoolInfo(ctx context.Context, in *GetMempoolInfoRequest, opts ...grpc.CallOption) (*GetMempoolInfoResponse, error) {
	out := new(GetMempoolInfoResponse)
	err := grpc.Invoke(ctx, "/btcrpc.btcd/GetMempoolInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *btcdClient) GetMempool(ctx context.Context, in *GetMempoolRequest, opts ...grpc.CallOption) (*GetMempoolResponse, error) {
	out := new(GetMempoolResponse)
	err := grpc.Invoke(ctx, "/btcrpc.btcd/GetMempool", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *btcdClient) GetRawMempool(ctx context.Context, in *GetRawMempoolRequest, opts ...grpc.CallOption) (*GetRawMempoolResponse, error) {
	out := new(GetRawMempoolResponse)
	err := grpc.Invoke(ctx, "/btcrpc.btcd/GetRawMempool", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *btcdClient) GetBestBlockInfo(ctx context.Context, in *GetBestBlockInfoRequest, opts ...grpc.CallOption) (*GetBestBlockInfoResponse, error) {
	out := new(GetBestBlockInfoResponse)
	err := grpc.Invoke(ctx, "/btcrpc.btcd/GetBestBlockInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *btcdClient) GetBlockInfo(ctx context.Context, in *GetBlockInfoRequest, opts ...grpc.CallOption) (*GetBlockInfoResponse, error) {
	out := new(GetBlockInfoResponse)
	err := grpc.Invoke(ctx, "/btcrpc.btcd/GetBlockInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *btcdClient) GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockResponse, error) {
	out := new(GetBlockResponse)
	err := grpc.Invoke(ctx, "/btcrpc.btcd/GetBlock", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *btcdClient) GetRawBlock(ctx context.Context, in *GetRawBlockRequest, opts ...grpc.CallOption) (*GetRawBlockResponse, error) {
	out := new(GetRawBlockResponse)
	err := grpc.Invoke(ctx, "/btcrpc.btcd/GetRawBlock", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *btcdClient) SubmitBlock(ctx context.Context, in *SubmitBlockRequest, opts ...grpc.CallOption) (*SubmitBlockResponse, error) {
	out := new(SubmitBlockResponse)
	err := grpc.Invoke(ctx, "/btcrpc.btcd/SubmitBlock", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *btcdClient) GetTransaction(ctx context.Context, in *GetTransactionRequest, opts ...grpc.CallOption) (*GetTransactionResponse, error) {
	out := new(GetTransactionResponse)
	err := grpc.Invoke(ctx, "/btcrpc.btcd/GetTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *btcdClient) GetRawTransaction(ctx context.Context, in *GetTransactionRequest, opts ...grpc.CallOption) (*GetRawTransactionResponse, error) {
	out := new(GetRawTransactionResponse)
	err := grpc.Invoke(ctx, "/btcrpc.btcd/GetRawTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *btcdClient) ScanTransactions(ctx context.Context, in *ScanTransactionsRequest, opts ...grpc.CallOption) (Btcd_ScanTransactionsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Btcd_serviceDesc.Streams[0], c.cc, "/btcrpc.btcd/ScanTransactions", opts...)
	if err != nil {
		return nil, err
	}
	x := &btcdScanTransactionsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Btcd_ScanTransactionsClient interface {
	Recv() (*ScanTransactionsUpdate, error)
	grpc.ClientStream
}

type btcdScanTransactionsClient struct {
	grpc.ClientStream
}

func (x *btcdScanTransactionsClient) Recv() (*ScanTransactionsUpdate, error) {
	m := new(ScanTransactionsUpdate)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *btcdClient) ScanRawTransactions(ctx context.Context, in *ScanTransactionsRequest, opts ...grpc.CallOption) (Btcd_ScanRawTransactionsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Btcd_serviceDesc.Streams[1], c.cc, "/btcrpc.btcd/ScanRawTransactions", opts...)
	if err != nil {
		return nil, err
	}
	x := &btcdScanRawTransactionsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Btcd_ScanRawTransactionsClient interface {
	Recv() (*ScanRawTransactionsUpdate, error)
	grpc.ClientStream
}

type btcdScanRawTransactionsClient struct {
	grpc.ClientStream
}

func (x *btcdScanRawTransactionsClient) Recv() (*ScanRawTransactionsUpdate, error) {
	m := new(ScanRawTransactionsUpdate)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *btcdClient) SubmitTransaction(ctx context.Context, in *SubmitTransactionRequest, opts ...grpc.CallOption) (*SubmitTransactionResponse, error) {
	out := new(SubmitTransactionResponse)
	err := grpc.Invoke(ctx, "/btcrpc.btcd/SubmitTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *btcdClient) GetAddressTransactions(ctx context.Context, in *GetAddressTransactionsRequest, opts ...grpc.CallOption) (*GetAddressTransactionsResponse, error) {
	out := new(GetAddressTransactionsResponse)
	err := grpc.Invoke(ctx, "/btcrpc.btcd/GetAddressTransactions", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *btcdClient) GetRawAddressTransactions(ctx context.Context, in *GetAddressTransactionsRequest, opts ...grpc.CallOption) (*GetRawAddressTransactionsResponse, error) {
	out := new(GetRawAddressTransactionsResponse)
	err := grpc.Invoke(ctx, "/btcrpc.btcd/GetRawAddressTransactions", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *btcdClient) GetAddressUnspentOutputs(ctx context.Context, in *GetAddressUnspentOutputsRequest, opts ...grpc.CallOption) (*GetAddressUnspentOutputsResponse, error) {
	out := new(GetAddressUnspentOutputsResponse)
	err := grpc.Invoke(ctx, "/btcrpc.btcd/GetAddressUnspentOutputs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *btcdClient) SubscribeTransactions(ctx context.Context, opts ...grpc.CallOption) (Btcd_SubscribeTransactionsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Btcd_serviceDesc.Streams[2], c.cc, "/btcrpc.btcd/SubscribeTransactions", opts...)
	if err != nil {
		return nil, err
	}
	x := &btcdSubscribeTransactionsClient{stream}
	return x, nil
}

type Btcd_SubscribeTransactionsClient interface {
	Send(*SubscribeTransactionsRequest) error
	Recv() (*TransactionNotification, error)
	grpc.ClientStream
}

type btcdSubscribeTransactionsClient struct {
	grpc.ClientStream
}

func (x *btcdSubscribeTransactionsClient) Send(m *SubscribeTransactionsRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *btcdSubscribeTransactionsClient) Recv() (*TransactionNotification, error) {
	m := new(TransactionNotification)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *btcdClient) SubscribeRawTransactions(ctx context.Context, opts ...grpc.CallOption) (Btcd_SubscribeRawTransactionsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Btcd_serviceDesc.Streams[3], c.cc, "/btcrpc.btcd/SubscribeRawTransactions", opts...)
	if err != nil {
		return nil, err
	}
	x := &btcdSubscribeRawTransactionsClient{stream}
	return x, nil
}

type Btcd_SubscribeRawTransactionsClient interface {
	Send(*SubscribeTransactionsRequest) error
	Recv() (*RawTransactionNotification, error)
	grpc.ClientStream
}

type btcdSubscribeRawTransactionsClient struct {
	grpc.ClientStream
}

func (x *btcdSubscribeRawTransactionsClient) Send(m *SubscribeTransactionsRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *btcdSubscribeRawTransactionsClient) Recv() (*RawTransactionNotification, error) {
	m := new(RawTransactionNotification)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *btcdClient) SubscribeBlocks(ctx context.Context, in *SubscribeBlocksRequest, opts ...grpc.CallOption) (Btcd_SubscribeBlocksClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Btcd_serviceDesc.Streams[4], c.cc, "/btcrpc.btcd/SubscribeBlocks", opts...)
	if err != nil {
		return nil, err
	}
	x := &btcdSubscribeBlocksClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Btcd_SubscribeBlocksClient interface {
	Recv() (*BlockNotification, error)
	grpc.ClientStream
}

type btcdSubscribeBlocksClient struct {
	grpc.ClientStream
}

func (x *btcdSubscribeBlocksClient) Recv() (*BlockNotification, error) {
	m := new(BlockNotification)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *btcdClient) GetPeers(ctx context.Context, in *GetPeersRequest, opts ...grpc.CallOption) (*GetPeersResponse, error) {
	out := new(GetPeersResponse)
	err := grpc.Invoke(ctx, "/btcrpc.btcd/GetPeers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *btcdClient) ConnectPeer(ctx context.Context, in *ConnectPeerRequest, opts ...grpc.CallOption) (*ConnectPeerResponse, error) {
	out := new(ConnectPeerResponse)
	err := grpc.Invoke(ctx, "/btcrpc.btcd/ConnectPeer", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *btcdClient) DisconnectPeer(ctx context.Context, in *DisconnectPeerRequest, opts ...grpc.CallOption) (*DisconnectPeerResponse, error) {
	out := new(DisconnectPeerResponse)
	err := grpc.Invoke(ctx, "/btcrpc.btcd/DisconnectPeer", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *btcdClient) GetMiningInfo(ctx context.Context, in *GetMiningInfoRequest, opts ...grpc.CallOption) (*GetMiningInfoResponse, error) {
	out := new(GetMiningInfoResponse)
	err := grpc.Invoke(ctx, "/btcrpc.btcd/GetMiningInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Btcd service

type BtcdServer interface {
	// Get various system and runtime-related info.
	GetSystemInfo(context.Context, *GetSystemInfoRequest) (*GetSystemInfoResponse, error)
	// Set the debug level of the daemon.
	SetDebugLevel(context.Context, *SetDebugLevelRequest) (*SetDebugLevelResponse, error)
	// Stop the daemon.
	StopDaemon(context.Context, *StopDaemonRequest) (*StopDaemonResponse, error)
	// Get various state info.
	// TODO(stevenroose) merge with GetSystemInfo into GetInfo maybe?
	GetNetworkInfo(context.Context, *GetNetworkInfoRequest) (*GetNetworkInfoResponse, error)
	// Get the total hashrate of the network.
	CalculateNetworkHashRate(context.Context, *CalculateNetworkHashRateRequest) (*CalculateNetworkHashRateResponse, error)
	// Get info about the mempool.
	GetMempoolInfo(context.Context, *GetMempoolInfoRequest) (*GetMempoolInfoResponse, error)
	// Get the transactions in the mempool.
	GetMempool(context.Context, *GetMempoolRequest) (*GetMempoolResponse, error)
	// Get all mempool transactions in serialized format.
	// TODO(stevenroose) should this be a streaming response because of the size?
	GetRawMempool(context.Context, *GetRawMempoolRequest) (*GetRawMempoolResponse, error)
	// Get info about the most recent block in the longest blockchain.
	GetBestBlockInfo(context.Context, *GetBestBlockInfoRequest) (*GetBestBlockInfoResponse, error)
	// Get info about the given block.
	GetBlockInfo(context.Context, *GetBlockInfoRequest) (*GetBlockInfoResponse, error)
	// Get a block.
	GetBlock(context.Context, *GetBlockRequest) (*GetBlockResponse, error)
	// Get a serialized block.
	GetRawBlock(context.Context, *GetRawBlockRequest) (*GetRawBlockResponse, error)
	// Submit the block to all connected peers.
	SubmitBlock(context.Context, *SubmitBlockRequest) (*SubmitBlockResponse, error)
	// Get a transaction given its hash.
	// This call requires the transaction index to be enabled to be able to
	// find transactions that are noto in the mempool.
	GetTransaction(context.Context, *GetTransactionRequest) (*GetTransactionResponse, error)
	// Get a serialized transaction given its hash.
	// This call requires the transaction index to be enabled to be able to
	// find transactions that are noto in the mempool.
	GetRawTransaction(context.Context, *GetTransactionRequest) (*GetRawTransactionResponse, error)
	// Scan part of the blockchain for relevant transactions.
	ScanTransactions(*ScanTransactionsRequest, Btcd_ScanTransactionsServer) error
	// Scan part of the blockchain for relevant transactions.
	ScanRawTransactions(*ScanTransactionsRequest, Btcd_ScanRawTransactionsServer) error
	// Submit a transaction to all connected peers.
	SubmitTransaction(context.Context, *SubmitTransactionRequest) (*SubmitTransactionResponse, error)
	// Returns all known transactions for the given address.
	//
	// This method requires the address and transaction index.
	GetAddressTransactions(context.Context, *GetAddressTransactionsRequest) (*GetAddressTransactionsResponse, error)
	// Returns all known transactions for the given address.
	//
	// This method requires the address and transaction index.
	GetRawAddressTransactions(context.Context, *GetAddressTransactionsRequest) (*GetRawAddressTransactionsResponse, error)
	// Returns all the unspent transaction outpoints for the given address.
	//
	// This method requires the address and transaction index.
	GetAddressUnspentOutputs(context.Context, *GetAddressUnspentOutputsRequest) (*GetAddressUnspentOutputsResponse, error)
	// Subscribe to relevant transactions based on the subscription requests.
	// The parameters to filter transactions on can be updated by sending new
	// SubscribeTransactionsRequest objects on the stream.
	SubscribeTransactions(Btcd_SubscribeTransactionsServer) error
	// Subscribe to relevant transactions based on the subscription requests.
	// The parameters to filter transactions on can be updated by sending new
	// SubscribeTransactionsRequest objects on the stream.
	SubscribeRawTransactions(Btcd_SubscribeRawTransactionsServer) error
	// Subscribe to notifications of new blocks being connected to the blockchain
	// or blocks being disconnected.
	SubscribeBlocks(*SubscribeBlocksRequest, Btcd_SubscribeBlocksServer) error
	// Get info about the peers this node is connected to.
	// Set permanent to get the permanent peer list.
	GetPeers(context.Context, *GetPeersRequest) (*GetPeersResponse, error)
	// Connect to a new peer.
	// Set permanent to true to add to permanent peer list.
	// TODO(stevenroose) is it worth/possible to have a flag to make it a blocking
	// call with a success flag
	ConnectPeer(context.Context, *ConnectPeerRequest) (*ConnectPeerResponse, error)
	// Disconnect from a peer.
	// Set permanent to true to remove from permanent peer list.
	DisconnectPeer(context.Context, *DisconnectPeerRequest) (*DisconnectPeerResponse, error)
	// Get info related to the miner.
	GetMiningInfo(context.Context, *GetMiningInfoRequest) (*GetMiningInfoResponse, error)
}

func RegisterBtcdServer(s *grpc.Server, srv BtcdServer) {
	s.RegisterService(&_Btcd_serviceDesc, srv)
}

func _Btcd_GetSystemInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSystemInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtcdServer).GetSystemInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.btcd/GetSystemInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtcdServer).GetSystemInfo(ctx, req.(*GetSystemInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Btcd_SetDebugLevel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDebugLevelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtcdServer).SetDebugLevel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.btcd/SetDebugLevel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtcdServer).SetDebugLevel(ctx, req.(*SetDebugLevelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Btcd_StopDaemon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopDaemonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtcdServer).StopDaemon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.btcd/StopDaemon",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtcdServer).StopDaemon(ctx, req.(*StopDaemonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Btcd_GetNetworkInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNetworkInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtcdServer).GetNetworkInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.btcd/GetNetworkInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtcdServer).GetNetworkInfo(ctx, req.(*GetNetworkInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Btcd_CalculateNetworkHashRate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalculateNetworkHashRateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtcdServer).CalculateNetworkHashRate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.btcd/CalculateNetworkHashRate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtcdServer).CalculateNetworkHashRate(ctx, req.(*CalculateNetworkHashRateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Btcd_GetMempoolInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMempoolInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtcdServer).GetMempoolInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.btcd/GetMempoolInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtcdServer).GetMempoolInfo(ctx, req.(*GetMempoolInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Btcd_GetMempool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMempoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtcdServer).GetMempool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.btcd/GetMempool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtcdServer).GetMempool(ctx, req.(*GetMempoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Btcd_GetRawMempool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRawMempoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtcdServer).GetRawMempool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.btcd/GetRawMempool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtcdServer).GetRawMempool(ctx, req.(*GetRawMempoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Btcd_GetBestBlockInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBestBlockInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtcdServer).GetBestBlockInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.btcd/GetBestBlockInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtcdServer).GetBestBlockInfo(ctx, req.(*GetBestBlockInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Btcd_GetBlockInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtcdServer).GetBlockInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.btcd/GetBlockInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtcdServer).GetBlockInfo(ctx, req.(*GetBlockInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Btcd_GetBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtcdServer).GetBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.btcd/GetBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtcdServer).GetBlock(ctx, req.(*GetBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Btcd_GetRawBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRawBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtcdServer).GetRawBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.btcd/GetRawBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtcdServer).GetRawBlock(ctx, req.(*GetRawBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Btcd_SubmitBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtcdServer).SubmitBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.btcd/SubmitBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtcdServer).SubmitBlock(ctx, req.(*SubmitBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Btcd_GetTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtcdServer).GetTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.btcd/GetTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtcdServer).GetTransaction(ctx, req.(*GetTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Btcd_GetRawTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtcdServer).GetRawTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.btcd/GetRawTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtcdServer).GetRawTransaction(ctx, req.(*GetTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Btcd_ScanTransactions_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ScanTransactionsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BtcdServer).ScanTransactions(m, &btcdScanTransactionsServer{stream})
}

type Btcd_ScanTransactionsServer interface {
	Send(*ScanTransactionsUpdate) error
	grpc.ServerStream
}

type btcdScanTransactionsServer struct {
	grpc.ServerStream
}

func (x *btcdScanTransactionsServer) Send(m *ScanTransactionsUpdate) error {
	return x.ServerStream.SendMsg(m)
}

func _Btcd_ScanRawTransactions_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ScanTransactionsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BtcdServer).ScanRawTransactions(m, &btcdScanRawTransactionsServer{stream})
}

type Btcd_ScanRawTransactionsServer interface {
	Send(*ScanRawTransactionsUpdate) error
	grpc.ServerStream
}

type btcdScanRawTransactionsServer struct {
	grpc.ServerStream
}

func (x *btcdScanRawTransactionsServer) Send(m *ScanRawTransactionsUpdate) error {
	return x.ServerStream.SendMsg(m)
}

func _Btcd_SubmitTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtcdServer).SubmitTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.btcd/SubmitTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtcdServer).SubmitTransaction(ctx, req.(*SubmitTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Btcd_GetAddressTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAddressTransactionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtcdServer).GetAddressTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.btcd/GetAddressTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtcdServer).GetAddressTransactions(ctx, req.(*GetAddressTransactionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Btcd_GetRawAddressTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAddressTransactionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtcdServer).GetRawAddressTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.btcd/GetRawAddressTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtcdServer).GetRawAddressTransactions(ctx, req.(*GetAddressTransactionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Btcd_GetAddressUnspentOutputs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAddressUnspentOutputsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtcdServer).GetAddressUnspentOutputs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.btcd/GetAddressUnspentOutputs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtcdServer).GetAddressUnspentOutputs(ctx, req.(*GetAddressUnspentOutputsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Btcd_SubscribeTransactions_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BtcdServer).SubscribeTransactions(&btcdSubscribeTransactionsServer{stream})
}

type Btcd_SubscribeTransactionsServer interface {
	Send(*TransactionNotification) error
	Recv() (*SubscribeTransactionsRequest, error)
	grpc.ServerStream
}

type btcdSubscribeTransactionsServer struct {
	grpc.ServerStream
}

func (x *btcdSubscribeTransactionsServer) Send(m *TransactionNotification) error {
	return x.ServerStream.SendMsg(m)
}

func (x *btcdSubscribeTransactionsServer) Recv() (*SubscribeTransactionsRequest, error) {
	m := new(SubscribeTransactionsRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Btcd_SubscribeRawTransactions_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BtcdServer).SubscribeRawTransactions(&btcdSubscribeRawTransactionsServer{stream})
}

type Btcd_SubscribeRawTransactionsServer interface {
	Send(*RawTransactionNotification) error
	Recv() (*SubscribeTransactionsRequest, error)
	grpc.ServerStream
}

type btcdSubscribeRawTransactionsServer struct {
	grpc.ServerStream
}

func (x *btcdSubscribeRawTransactionsServer) Send(m *RawTransactionNotification) error {
	return x.ServerStream.SendMsg(m)
}

func (x *btcdSubscribeRawTransactionsServer) Recv() (*SubscribeTransactionsRequest, error) {
	m := new(SubscribeTransactionsRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Btcd_SubscribeBlocks_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeBlocksRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BtcdServer).SubscribeBlocks(m, &btcdSubscribeBlocksServer{stream})
}

type Btcd_SubscribeBlocksServer interface {
	Send(*BlockNotification) error
	grpc.ServerStream
}

type btcdSubscribeBlocksServer struct {
	grpc.ServerStream
}

func (x *btcdSubscribeBlocksServer) Send(m *BlockNotification) error {
	return x.ServerStream.SendMsg(m)
}

func _Btcd_GetPeers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPeersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtcdServer).GetPeers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.btcd/GetPeers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtcdServer).GetPeers(ctx, req.(*GetPeersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Btcd_ConnectPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectPeerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtcdServer).ConnectPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.btcd/ConnectPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtcdServer).ConnectPeer(ctx, req.(*ConnectPeerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Btcd_DisconnectPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisconnectPeerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtcdServer).DisconnectPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.btcd/DisconnectPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtcdServer).DisconnectPeer(ctx, req.(*DisconnectPeerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Btcd_GetMiningInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMiningInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtcdServer).GetMiningInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.btcd/GetMiningInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtcdServer).GetMiningInfo(ctx, req.(*GetMiningInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Btcd_serviceDesc = grpc.ServiceDesc{
	ServiceName: "btcrpc.btcd",
	HandlerType: (*BtcdServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSystemInfo",
			Handler:    _Btcd_GetSystemInfo_Handler,
		},
		{
			MethodName: "SetDebugLevel",
			Handler:    _Btcd_SetDebugLevel_Handler,
		},
		{
			MethodName: "StopDaemon",
			Handler:    _Btcd_StopDaemon_Handler,
		},
		{
			MethodName: "GetNetworkInfo",
			Handler:    _Btcd_GetNetworkInfo_Handler,
		},
		{
			MethodName: "CalculateNetworkHashRate",
			Handler:    _Btcd_CalculateNetworkHashRate_Handler,
		},
		{
			MethodName: "GetMempoolInfo",
			Handler:    _Btcd_GetMempoolInfo_Handler,
		},
		{
			MethodName: "GetMempool",
			Handler:    _Btcd_GetMempool_Handler,
		},
		{
			MethodName: "GetRawMempool",
			Handler:    _Btcd_GetRawMempool_Handler,
		},
		{
			MethodName: "GetBestBlockInfo",
			Handler:    _Btcd_GetBestBlockInfo_Handler,
		},
		{
			MethodName: "GetBlockInfo",
			Handler:    _Btcd_GetBlockInfo_Handler,
		},
		{
			MethodName: "GetBlock",
			Handler:    _Btcd_GetBlock_Handler,
		},
		{
			MethodName: "GetRawBlock",
			Handler:    _Btcd_GetRawBlock_Handler,
		},
		{
			MethodName: "SubmitBlock",
			Handler:    _Btcd_SubmitBlock_Handler,
		},
		{
			MethodName: "GetTransaction",
			Handler:    _Btcd_GetTransaction_Handler,
		},
		{
			MethodName: "GetRawTransaction",
			Handler:    _Btcd_GetRawTransaction_Handler,
		},
		{
			MethodName: "SubmitTransaction",
			Handler:    _Btcd_SubmitTransaction_Handler,
		},
		{
			MethodName: "GetAddressTransactions",
			Handler:    _Btcd_GetAddressTransactions_Handler,
		},
		{
			MethodName: "GetRawAddressTransactions",
			Handler:    _Btcd_GetRawAddressTransactions_Handler,
		},
		{
			MethodName: "GetAddressUnspentOutputs",
			Handler:    _Btcd_GetAddressUnspentOutputs_Handler,
		},
		{
			MethodName: "GetPeers",
			Handler:    _Btcd_GetPeers_Handler,
		},
		{
			MethodName: "ConnectPeer",
			Handler:    _Btcd_ConnectPeer_Handler,
		},
		{
			MethodName: "DisconnectPeer",
			Handler:    _Btcd_DisconnectPeer_Handler,
		},
		{
			MethodName: "GetMiningInfo",
			Handler:    _Btcd_GetMiningInfo_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ScanTransactions",
			Handler:       _Btcd_ScanTransactions_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ScanRawTransactions",
			Handler:       _Btcd_ScanRawTransactions_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SubscribeTransactions",
			Handler:       _Btcd_SubscribeTransactions_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "SubscribeRawTransactions",
			Handler:       _Btcd_SubscribeRawTransactions_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "SubscribeBlocks",
			Handler:       _Btcd_SubscribeBlocks_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "btcrpc.proto",
}

// Client API for Regtest service

type RegtestClient interface {
	// Set the properties for the built-in CPR miner.
	// Also allows to add new payout addresses.
	SetGenerate(ctx context.Context, in *SetGenerateRequest, opts ...grpc.CallOption) (*SetGenerateResponse, error)
	// Get info about the CPU block generator.
	GetGenerateInfo(ctx context.Context, in *GetGenerateInfoRequest, opts ...grpc.CallOption) (*GetGenerateInfoResponse, error)
	// Generate a number of blocks.
	// Also allows to add new payout addresses.
	GenerateBlocks(ctx context.Context, in *GenerateBlocksRequest, opts ...grpc.CallOption) (*GenerateBlocksResponse, error)
}

type regtestClient struct {
	cc *grpc.ClientConn
}

func NewRegtestClient(cc *grpc.ClientConn) RegtestClient {
	return &regtestClient{cc}
}

func (c *regtestClient) SetGenerate(ctx context.Context, in *SetGenerateRequest, opts ...grpc.CallOption) (*SetGenerateResponse, error) {
	out := new(SetGenerateResponse)
	err := grpc.Invoke(ctx, "/btcrpc.regtest/SetGenerate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *regtestClient) GetGenerateInfo(ctx context.Context, in *GetGenerateInfoRequest, opts ...grpc.CallOption) (*GetGenerateInfoResponse, error) {
	out := new(GetGenerateInfoResponse)
	err := grpc.Invoke(ctx, "/btcrpc.regtest/GetGenerateInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *regtestClient) GenerateBlocks(ctx context.Context, in *GenerateBlocksRequest, opts ...grpc.CallOption) (*GenerateBlocksResponse, error) {
	out := new(GenerateBlocksResponse)
	err := grpc.Invoke(ctx, "/btcrpc.regtest/GenerateBlocks", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Regtest service

type RegtestServer interface {
	// Set the properties for the built-in CPR miner.
	// Also allows to add new payout addresses.
	SetGenerate(context.Context, *SetGenerateRequest) (*SetGenerateResponse, error)
	// Get info about the CPU block generator.
	GetGenerateInfo(context.Context, *GetGenerateInfoRequest) (*GetGenerateInfoResponse, error)
	// Generate a number of blocks.
	// Also allows to add new payout addresses.
	GenerateBlocks(context.Context, *GenerateBlocksRequest) (*GenerateBlocksResponse, error)
}

func RegisterRegtestServer(s *grpc.Server, srv RegtestServer) {
	s.RegisterService(&_Regtest_serviceDesc, srv)
}

func _Regtest_SetGenerate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetGenerateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegtestServer).SetGenerate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.regtest/SetGenerate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegtestServer).SetGenerate(ctx, req.(*SetGenerateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Regtest_GetGenerateInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGenerateInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegtestServer).GetGenerateInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.regtest/GetGenerateInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegtestServer).GetGenerateInfo(ctx, req.(*GetGenerateInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Regtest_GenerateBlocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateBlocksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegtestServer).GenerateBlocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/btcrpc.regtest/GenerateBlocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegtestServer).GenerateBlocks(ctx, req.(*GenerateBlocksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Regtest_serviceDesc = grpc.ServiceDesc{
	ServiceName: "btcrpc.regtest",
	HandlerType: (*RegtestServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetGenerate",
			Handler:    _Regtest_SetGenerate_Handler,
		},
		{
			MethodName: "GetGenerateInfo",
			Handler:    _Regtest_GetGenerateInfo_Handler,
		},
		{
			MethodName: "GenerateBlocks",
			Handler:    _Regtest_GenerateBlocks_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "btcrpc.proto",
}

func init() { proto.RegisterFile("btcrpc.proto", fileDescriptor_btcrpc_acc32e149c79c7d6) }

var fileDescriptor_btcrpc_acc32e149c79c7d6 = []byte{
	// 3654 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x3a, 0x4d, 0x73, 0x1b, 0xc7,
	0x72, 0x58, 0x7c, 0x11, 0x68, 0x00, 0xe4, 0x72, 0xf8, 0x05, 0x42, 0xa2, 0x48, 0xad, 0x24, 0x8b,
	0x8a, 0x1d, 0x5a, 0xa6, 0xad, 0x92, 0x53, 0x8a, 0x1d, 0x93, 0x20, 0x25, 0xd2, 0x11, 0x41, 0x66,
	0x41, 0x59, 0x76, 0x12, 0x17, 0xb2, 0xbb, 0x18, 0x90, 0x1b, 0x81, 0xb3, 0xc8, 0xee, 0x82, 0x22,
	0x5d, 0x95, 0x4b, 0x72, 0xc9, 0x1f, 0x48, 0xaa, 0x7c, 0xcf, 0x29, 0xbf, 0x20, 0x95, 0x4a, 0x0e,
	0x39, 0x24, 0xc7, 0xe4, 0x9f, 0xe4, 0x96, 0xaa, 0x77, 0x78, 0x87, 0x57, 0xf3, 0xb1, 0xbb, 0x33,
	0xd8, 0x85, 0x28, 0xd9, 0xef, 0xb6, 0xd3, 0xdd, 0xd3, 0xd3, 0xd3, 0xdd, 0xd3, 0xdd, 0xd3, 0xb3,
	0x50, 0xb7, 0x43, 0xc7, 0x1f, 0x39, 0x5b, 0x23, 0xdf, 0x0b, 0x3d, 0x54, 0xe6, 0x23, 0xe3, 0x9f,
	0x34, 0x28, 0xed, 0x0e, 0x3d, 0xe7, 0x0d, 0x7a, 0x00, 0x45, 0x97, 0x0c, 0xbc, 0xa6, 0xb6, 0xa1,
	0x6d, 0xd6, 0xb6, 0xe7, 0xb7, 0x04, 0x39, 0x43, 0x1e, 0x92, 0x81, 0x67, 0x32, 0x34, 0xfa, 0x43,
	0x40, 0xa1, 0x6f, 0x91, 0xc0, 0x72, 0x42, 0xd7, 0x23, 0xbd, 0x73, 0x2b, 0x38, 0xc7, 0x41, 0x33,
	0xbf, 0x51, 0xd8, 0xac, 0x9b, 0xf3, 0x12, 0xe6, 0x80, 0x21, 0xd0, 0x53, 0xa8, 0x4b, 0xc0, 0xa0,
	0x59, 0xd8, 0x28, 0x6c, 0xd6, 0xb6, 0x17, 0x22, 0xee, 0xa7, 0x09, 0xce, 0x54, 0x08, 0x8d, 0xff,
	0xca, 0x43, 0x35, 0x5e, 0x1b, 0x21, 0x28, 0xd2, 0x95, 0x98, 0x70, 0x75, 0x93, 0x7d, 0xa3, 0x65,
	0x28, 0x9f, 0x63, 0xf7, 0xec, 0x3c, 0x6c, 0xe6, 0x37, 0xb4, 0xcd, 0x92, 0x29, 0x46, 0xa8, 0x09,
	0x33, 0x97, 0xd8, 0x0f, 0x5c, 0x8f, 0x34, 0x0b, 0x0c, 0x11, 0x0d, 0xd1, 0x03, 0x98, 0x1d, 0xf9,
	0xf8, 0xd2, 0xf5, 0xc6, 0x41, 0xcf, 0xa6, 0xbc, 0x9b, 0x45, 0xc6, 0xaf, 0x11, 0x41, 0xb9, 0x26,
	0xd6, 0xa1, 0x76, 0x81, 0xfd, 0x37, 0x43, 0xdc, 0xf3, 0x3d, 0x2f, 0x6c, 0x96, 0x18, 0x0d, 0x70,
	0x90, 0xe9, 0x79, 0x21, 0x95, 0x26, 0x74, 0x2f, 0x70, 0xb3, 0xbc, 0xa1, 0x6d, 0x16, 0x4c, 0xf6,
	0x4d, 0x61, 0xb6, 0x1b, 0x06, 0xcd, 0x99, 0x0d, 0x6d, 0xb3, 0x61, 0xb2, 0x6f, 0xb4, 0x08, 0x25,
	0xe2, 0x11, 0x07, 0x37, 0x2b, 0x0c, 0xc8, 0x07, 0xe8, 0x3e, 0x34, 0x1c, 0x8f, 0x0c, 0x5c, 0xff,
	0xc2, 0xe2, 0x3a, 0xa9, 0x32, 0x29, 0x55, 0x20, 0xba, 0x03, 0xd0, 0x77, 0x07, 0x03, 0xd7, 0x19,
	0x0f, 0xc3, 0xeb, 0x26, 0x6c, 0x68, 0x9b, 0x9a, 0x29, 0x41, 0xd0, 0x47, 0x30, 0x47, 0xf0, 0x55,
	0xc8, 0xf7, 0xc1, 0xcc, 0xd0, 0xac, 0xf1, 0xcd, 0x50, 0x30, 0xdb, 0x08, 0x35, 0x81, 0x71, 0x08,
	0x75, 0x36, 0x78, 0xe9, 0x39, 0x56, 0xe8, 0xf9, 0x68, 0x51, 0xd6, 0xe4, 0x41, 0x4e, 0xe8, 0xb2,
	0xa9, 0xea, 0xf2, 0x20, 0x17, 0x69, 0x73, 0xb7, 0x0a, 0x33, 0x43, 0x3e, 0xd5, 0xf8, 0x3f, 0x0d,
	0xd0, 0x11, 0xbe, 0x18, 0x79, 0xde, 0x50, 0xb2, 0x1b, 0x7a, 0x02, 0x35, 0xc9, 0x72, 0xc2, 0x7f,
	0x32, 0x2d, 0x2c, 0xd3, 0xa1, 0x35, 0x00, 0xab, 0xdf, 0xc7, 0xfd, 0x1e, 0x53, 0x65, 0x9e, 0xa9,
	0xb2, 0xca, 0x20, 0xa7, 0x54, 0x9f, 0x77, 0xa1, 0xce, 0xd1, 0x42, 0x2e, 0x6e, 0xca, 0x1a, 0x83,
	0x1d, 0x70, 0x43, 0xeb, 0x50, 0x18, 0x60, 0xcc, 0x6c, 0x58, 0x30, 0xe9, 0x27, 0xda, 0x80, 0xfa,
	0x00, 0xe3, 0xde, 0x08, 0xfb, 0x3d, 0xfb, 0x3a, 0xc4, 0xcc, 0x74, 0x05, 0x13, 0x06, 0x18, 0x9f,
	0x60, 0x7f, 0xf7, 0x3a, 0xc4, 0xe8, 0x63, 0x98, 0x0f, 0x42, 0xcb, 0x0f, 0x5d, 0x72, 0xd6, 0x1b,
	0xf9, 0xae, 0xe7, 0xbb, 0xe1, 0x35, 0xb3, 0xa3, 0x66, 0xea, 0x11, 0xe2, 0x44, 0xc0, 0x8d, 0xdf,
	0x94, 0xa0, 0x26, 0xef, 0x34, 0xcb, 0x0b, 0x25, 0x6f, 0xcb, 0xab, 0xde, 0xf6, 0x19, 0x94, 0x5d,
	0x32, 0x1a, 0x87, 0x91, 0xd3, 0xaf, 0x66, 0xa8, 0x64, 0xeb, 0x90, 0x52, 0x98, 0x82, 0x10, 0x7d,
	0x01, 0x33, 0xde, 0x38, 0x64, 0x73, 0x8a, 0x6c, 0x4e, 0x2b, 0x6b, 0xce, 0x31, 0x23, 0x31, 0x23,
	0x52, 0x74, 0x0b, 0xaa, 0xcc, 0x09, 0x98, 0x22, 0x4b, 0xcc, 0xd5, 0x2a, 0x14, 0xc0, 0xf4, 0xb8,
	0x0e, 0xb5, 0x73, 0x2b, 0xe8, 0xbd, 0x75, 0x43, 0x82, 0x83, 0x80, 0x6d, 0xb5, 0x62, 0xc2, 0xb9,
	0x15, 0xbc, 0xe6, 0x10, 0xaa, 0x68, 0x81, 0xe4, 0x5e, 0x34, 0xc3, 0x36, 0x57, 0x13, 0x30, 0xea,
	0x43, 0xb1, 0xbf, 0x57, 0x24, 0x7f, 0x7f, 0x3f, 0x2f, 0xbe, 0x0b, 0x75, 0xe1, 0xa0, 0xdc, 0x8a,
	0xc0, 0xad, 0xc8, 0x60, 0xc2, 0x8a, 0x6b, 0x00, 0x29, 0x1f, 0xae, 0xda, 0x91, 0xff, 0xb6, 0x7e,
	0xce, 0x43, 0x89, 0x29, 0x09, 0xb5, 0xa0, 0xe2, 0x78, 0x2e, 0xb1, 0xad, 0x00, 0x33, 0x0b, 0x54,
	0xcc, 0x78, 0x8c, 0xbe, 0x86, 0x0a, 0xd5, 0x86, 0xe7, 0x12, 0xee, 0xc1, 0xb5, 0x6d, 0x63, 0xaa,
	0xb6, 0x99, 0xfe, 0x28, 0xa5, 0x19, 0xcf, 0x41, 0x8f, 0x40, 0x0f, 0xdc, 0x33, 0x62, 0x85, 0x63,
	0x1f, 0xf7, 0x02, 0xc7, 0x77, 0x47, 0xdc, 0xe3, 0xea, 0xe6, 0x5c, 0x0c, 0xef, 0x32, 0x30, 0x15,
	0x23, 0xc0, 0x7f, 0x33, 0xc6, 0xf4, 0x5c, 0x17, 0xb9, 0xb2, 0xa3, 0xb1, 0xac, 0xcb, 0xbe, 0x15,
	0x5a, 0xcd, 0x12, 0x0b, 0x8b, 0x91, 0x2e, 0xf7, 0xac, 0xd0, 0xa2, 0x31, 0xe1, 0xd2, 0x1a, 0x8e,
	0xa3, 0xe0, 0xc1, 0x07, 0xad, 0x2f, 0xa0, 0x12, 0x49, 0x95, 0xe9, 0x65, 0x8b, 0x50, 0x72, 0x49,
	0x1f, 0x5f, 0xb1, 0xcd, 0x35, 0x4c, 0x3e, 0x68, 0xfd, 0x00, 0x65, 0xee, 0x0b, 0x09, 0x5e, 0x93,
	0xf0, 0xc9, 0x5a, 0x79, 0x69, 0x2d, 0x74, 0x0f, 0x1a, 0xa3, 0xb1, 0xfd, 0x06, 0x5f, 0xab, 0x1b,
	0xad, 0x73, 0x20, 0xdf, 0xa5, 0x11, 0xc0, 0xbc, 0xa4, 0xb8, 0xe7, 0xee, 0x30, 0xc4, 0x3e, 0xba,
	0x0d, 0xf4, 0x80, 0xfa, 0x38, 0x08, 0x70, 0xd0, 0xd4, 0x36, 0x0a, 0x9b, 0x55, 0x33, 0x01, 0xa0,
	0x6f, 0xa0, 0x1a, 0xe9, 0x93, 0x27, 0x84, 0xf7, 0x33, 0x42, 0x32, 0xc9, 0xf8, 0x1f, 0x0d, 0x1a,
	0xaf, 0x48, 0x30, 0xc2, 0x24, 0x14, 0xfb, 0x92, 0xed, 0xaa, 0xfd, 0x02, 0xbb, 0xa6, 0xf6, 0x9a,
	0x4f, 0xef, 0x35, 0x51, 0x53, 0x41, 0x56, 0xd3, 0x3a, 0xd4, 0xdc, 0xa0, 0x17, 0x7b, 0x5c, 0x91,
	0x1f, 0x1c, 0x37, 0x68, 0x47, 0x3e, 0x37, 0xe9, 0xdb, 0xa5, 0x94, 0x6f, 0x1b, 0x3f, 0x6b, 0x30,
	0xcf, 0xa2, 0x6f, 0xc7, 0x0b, 0xdd, 0x81, 0xeb, 0xb0, 0x53, 0x81, 0xb6, 0xa1, 0x18, 0x5e, 0x8f,
	0xb8, 0x13, 0xcf, 0x6e, 0xdf, 0x51, 0x32, 0xad, 0x4c, 0xb8, 0x75, 0x7a, 0x3d, 0xc2, 0x26, 0xa3,
	0x45, 0x0f, 0xa1, 0xc4, 0x33, 0x56, 0x7e, 0x5a, 0x7a, 0xe6, 0x78, 0xe3, 0x21, 0x14, 0xe9, 0x34,
	0xd4, 0x80, 0x6a, 0xfb, 0xb8, 0xd3, 0xd9, 0x6f, 0x9f, 0xee, 0xef, 0xe9, 0x39, 0xa4, 0x43, 0x7d,
	0xef, 0xb0, 0x9b, 0x40, 0x34, 0xe3, 0x0a, 0x5a, 0xa6, 0xf5, 0x56, 0xd2, 0xa2, 0x22, 0xe3, 0x97,
	0x8a, 0x8c, 0xf7, 0x33, 0x94, 0x3e, 0x4d, 0xd2, 0x0d, 0x35, 0x1d, 0x70, 0x85, 0xcb, 0x20, 0xe3,
	0x9f, 0xf3, 0xb0, 0xf2, 0xfb, 0x5f, 0xf7, 0x5b, 0x58, 0x12, 0xb1, 0x87, 0xe6, 0x94, 0x09, 0x09,
	0xb2, 0x13, 0xd2, 0x41, 0xce, 0x5c, 0x8c, 0xe7, 0xc8, 0x81, 0xfe, 0x18, 0x16, 0x2d, 0xc7, 0xc1,
	0xa3, 0x70, 0x82, 0x55, 0x81, 0xb1, 0x8a, 0x83, 0x72, 0x3a, 0x19, 0x1e, 0xe4, 0xcc, 0x85, 0x68,
	0xa6, 0x04, 0x36, 0xee, 0x09, 0xab, 0xd4, 0xa1, 0xb2, 0xd3, 0x6e, 0xef, 0x9f, 0x70, 0xa3, 0x70,
	0x1b, 0x3d, 0x3f, 0x34, 0x8f, 0xa8, 0x45, 0x76, 0x1b, 0x8a, 0xe6, 0x8c, 0x1f, 0x61, 0xbd, 0x6d,
	0x0d, 0x9d, 0xf1, 0xd0, 0x0a, 0x71, 0x07, 0x87, 0x6f, 0x3d, 0x9f, 0x45, 0x44, 0xd3, 0x0a, 0xb1,
	0x49, 0x03, 0x4e, 0xc0, 0x62, 0x27, 0x26, 0x71, 0x8a, 0xd4, 0x98, 0x03, 0x56, 0x31, 0x89, 0x12,
	0xe4, 0x2d, 0xa8, 0x12, 0x9b, 0x57, 0x08, 0x81, 0xc8, 0x4e, 0x15, 0x62, 0x33, 0x97, 0x09, 0x8c,
	0xaf, 0x61, 0x63, 0x3a, 0xfb, 0x60, 0xe4, 0x91, 0x00, 0xd3, 0x58, 0x47, 0xc3, 0x8f, 0x6f, 0x85,
	0xdc, 0x22, 0x45, 0x33, 0x1e, 0x1b, 0xaf, 0x00, 0xb5, 0x3d, 0x42, 0xb0, 0x13, 0x9e, 0x60, 0xec,
	0x47, 0x12, 0xdd, 0x85, 0xfa, 0x08, 0x63, 0xbf, 0x27, 0xc2, 0x02, 0x9b, 0x55, 0x35, 0x6b, 0x14,
	0xb6, 0xc3, 0x41, 0x34, 0x8a, 0x8c, 0xb0, 0x7f, 0x61, 0x11, 0x2c, 0x82, 0x75, 0xc5, 0x4c, 0x00,
	0xc6, 0x12, 0x2c, 0x28, 0x6c, 0xb9, 0x24, 0xc6, 0xdf, 0xc2, 0xd2, 0x9e, 0x1b, 0x38, 0xe9, 0x05,
	0xef, 0x65, 0x2d, 0x78, 0x90, 0x53, 0x97, 0x5c, 0x85, 0x19, 0x46, 0xe4, 0xf6, 0x93, 0xfa, 0x86,
	0x02, 0x0e, 0xfb, 0xaa, 0x34, 0x85, 0x09, 0x69, 0x76, 0xcb, 0x50, 0xa4, 0x74, 0x46, 0x13, 0x96,
	0x27, 0x97, 0x17, 0x82, 0xfd, 0x05, 0x2c, 0xbd, 0xc0, 0x04, 0x53, 0x95, 0x70, 0xc5, 0x46, 0x82,
	0x29, 0xca, 0xe7, 0x61, 0x39, 0x56, 0x3e, 0xab, 0x44, 0xad, 0x6b, 0x6f, 0x1c, 0xc6, 0x72, 0xe7,
	0x99, 0xa2, 0x1a, 0x1c, 0x2a, 0xe4, 0x36, 0x9e, 0xc1, 0xf2, 0x24, 0x73, 0x61, 0x99, 0x24, 0xf8,
	0xf0, 0x02, 0x5c, 0xe3, 0x99, 0x26, 0xce, 0x9b, 0x38, 0x30, 0x2e, 0x60, 0xed, 0x05, 0x8e, 0x58,
	0x49, 0xce, 0x18, 0x4b, 0xd8, 0x84, 0x19, 0xd5, 0x4c, 0xd1, 0x10, 0xad, 0xc0, 0x0c, 0xb1, 0x7b,
	0xc1, 0x1b, 0x77, 0x24, 0x12, 0x4e, 0x99, 0xd8, 0xdd, 0x37, 0xee, 0x08, 0xad, 0x42, 0x85, 0xd8,
	0xbd, 0x01, 0x0e, 0x9d, 0x73, 0xa6, 0xac, 0x86, 0x39, 0x43, 0xec, 0xe7, 0x74, 0x68, 0xfc, 0xbb,
	0x06, 0x77, 0xa6, 0xad, 0x27, 0x84, 0xfe, 0x16, 0x96, 0x33, 0x8f, 0x28, 0x17, 0x7f, 0x4a, 0xd1,
	0xb8, 0x94, 0x75, 0x42, 0x03, 0xd4, 0x81, 0xe6, 0x98, 0x4c, 0xe1, 0x96, 0x9f, 0xce, 0x6d, 0x45,
	0x9a, 0x24, 0xf3, 0x33, 0xfe, 0x51, 0x83, 0xbb, 0x2f, 0x70, 0x68, 0x5a, 0x6f, 0xdf, 0xb5, 0x83,
	0x27, 0xef, 0xdc, 0x41, 0x7d, 0x9a, 0xb0, 0x7f, 0x74, 0x83, 0xb0, 0xf5, 0xe9, 0x72, 0x3d, 0x83,
	0xf5, 0x44, 0xab, 0x4a, 0x72, 0xbc, 0xd9, 0x8e, 0x46, 0x17, 0x36, 0xa6, 0x4f, 0x16, 0x5b, 0xfa,
	0x34, 0xa9, 0x39, 0xb9, 0x15, 0x96, 0x22, 0xbd, 0x29, 0x13, 0xe2, 0x72, 0xd3, 0x58, 0x85, 0x95,
	0x17, 0x38, 0xdc, 0xc5, 0x41, 0x98, 0x24, 0x1f, 0x2e, 0x89, 0xb1, 0x03, 0xcd, 0x34, 0x4a, 0xac,
	0xf3, 0x7e, 0xf7, 0x4b, 0x83, 0xc0, 0x1c, 0x65, 0x41, 0xa1, 0xd1, 0xfe, 0xb6, 0xe2, 0x2b, 0x88,
	0x98, 0xbc, 0xa8, 0x4c, 0x16, 0x37, 0x1b, 0x33, 0x22, 0xa2, 0x35, 0xfe, 0x60, 0x3c, 0x1c, 0x4e,
	0xaa, 0x99, 0x1e, 0x6d, 0x9d, 0x22, 0x14, 0xfd, 0x3e, 0x05, 0x3d, 0x59, 0x4f, 0x88, 0x7a, 0x2f,
	0x4a, 0xb6, 0x7c, 0xb9, 0x86, 0xb2, 0x5c, 0x94, 0x68, 0x97, 0x61, 0x31, 0x9a, 0xd8, 0xf6, 0xc6,
	0x24, 0x8c, 0x74, 0xf0, 0x25, 0x0d, 0x08, 0x0a, 0x5c, 0x70, 0x5d, 0x07, 0x7e, 0x3c, 0x7b, 0x0e,
	0x05, 0x8b, 0x90, 0xc0, 0x6b, 0x5f, 0x46, 0x68, 0xec, 0xc3, 0x42, 0x34, 0x53, 0x52, 0xea, 0x87,
	0x6e, 0xdf, 0xf8, 0x2a, 0x11, 0xec, 0x97, 0x18, 0xa0, 0x49, 0x63, 0x4e, 0x18, 0x85, 0x1d, 0xd9,
	0xba, 0xff, 0xad, 0x31, 0xcb, 0xab, 0xa8, 0x24, 0x53, 0x9c, 0x09, 0x78, 0x54, 0x9c, 0x47, 0x63,
	0x9a, 0xa5, 0x88, 0xdd, 0xa3, 0x09, 0x06, 0xfb, 0x51, 0x1e, 0xaa, 0x12, 0xfb, 0x35, 0x07, 0x28,
	0x49, 0xa6, 0xa0, 0x26, 0x99, 0x89, 0x5b, 0x70, 0x31, 0x75, 0x0b, 0xfe, 0x02, 0x96, 0x89, 0xdd,
	0xa3, 0x49, 0x78, 0xf2, 0x58, 0xf1, 0x7b, 0xd0, 0x22, 0xb1, 0x4f, 0x18, 0x52, 0xb1, 0xf9, 0x37,
	0x30, 0xff, 0x02, 0x87, 0x22, 0x7b, 0x47, 0x6a, 0xce, 0xf4, 0x1a, 0x6d, 0x8a, 0xd7, 0xfc, 0xbd,
	0x06, 0x48, 0x66, 0x21, 0xb4, 0x90, 0xdd, 0x1c, 0xd1, 0xa6, 0x35, 0x47, 0xbe, 0x9e, 0x68, 0x8e,
	0xe4, 0xd5, 0x3b, 0x5f, 0xba, 0xbc, 0x98, 0xe8, 0x91, 0xac, 0x30, 0x57, 0x13, 0x64, 0xb2, 0xa5,
	0xfe, 0x92, 0xd9, 0x50, 0x41, 0x08, 0x09, 0x1f, 0xc2, 0x1c, 0xb1, 0xd3, 0x7b, 0x6c, 0x98, 0xb3,
	0xc4, 0x56, 0x42, 0x16, 0x8f, 0xf4, 0xf4, 0x16, 0xcd, 0x4d, 0x56, 0xa4, 0x91, 0x9e, 0x5e, 0xa1,
	0x03, 0xe1, 0xf9, 0x47, 0x2e, 0x71, 0xc9, 0x99, 0xbc, 0xea, 0xff, 0xe6, 0xb9, 0x3c, 0x12, 0x42,
	0xac, 0xfa, 0x08, 0x74, 0xc2, 0x4b, 0x8c, 0xde, 0x44, 0x3d, 0x31, 0x47, 0x92, 0xd2, 0x83, 0x59,
	0xfc, 0x31, 0x2c, 0x3a, 0x63, 0xdf, 0xc7, 0x24, 0x6e, 0x6d, 0xc8, 0x3d, 0x1e, 0x24, 0x70, 0xbb,
	0xd2, 0x05, 0xf2, 0x13, 0x40, 0xea, 0x8c, 0xc0, 0xfd, 0x29, 0xf2, 0x24, 0x5d, 0xa6, 0xef, 0xba,
	0x3f, 0x65, 0xf0, 0x7f, 0xcb, 0xf9, 0x17, 0x19, 0xbd, 0xc2, 0xff, 0x35, 0xe7, 0xbf, 0x03, 0x6b,
	0xea, 0x8c, 0x49, 0x05, 0x72, 0x57, 0x6b, 0xc9, 0x53, 0x3b, 0xaa, 0x32, 0x55, 0x37, 0x2e, 0xa7,
	0xdc, 0x78, 0x19, 0xca, 0xd8, 0xf7, 0x3d, 0x9f, 0xb7, 0x8f, 0xaa, 0xa6, 0x18, 0x09, 0x03, 0x8b,
	0xea, 0x4c, 0x56, 0xf5, 0x7f, 0xe6, 0x99, 0x85, 0x15, 0x4c, 0x9c, 0x64, 0x6b, 0xb6, 0x1b, 0xd2,
	0x7b, 0x4b, 0x8f, 0xe0, 0x50, 0x14, 0xd2, 0x8f, 0x22, 0x9f, 0xca, 0x9e, 0xb4, 0xb5, 0xcb, 0x67,
	0x74, 0x70, 0x68, 0x82, 0x1d, 0x7f, 0xb3, 0x90, 0x85, 0x83, 0x50, 0xb5, 0x01, 0x50, 0x90, 0xd0,
	0xfd, 0x3a, 0xd4, 0x42, 0xf7, 0x02, 0xf7, 0xbc, 0xc1, 0x20, 0xc0, 0xa1, 0xb8, 0x40, 0x01, 0x05,
	0x1d, 0x33, 0xc8, 0x8d, 0x07, 0x58, 0x3e, 0xfc, 0xa5, 0x89, 0xc3, 0x7f, 0x0b, 0xaa, 0x3e, 0x1e,
	0x5a, 0xd7, 0xbd, 0x01, 0xc6, 0x42, 0x69, 0x15, 0x06, 0x78, 0x8e, 0xb1, 0xf1, 0x0d, 0x40, 0x22,
	0x34, 0xaa, 0xc1, 0xcc, 0xd1, 0xce, 0x61, 0xa7, 0xb3, 0x7f, 0xaa, 0xe7, 0xe8, 0xe0, 0x74, 0xbf,
	0x7b, 0x4a, 0x07, 0x1a, 0xad, 0xb8, 0xc5, 0xe0, 0x73, 0x3d, 0x8f, 0x00, 0xca, 0xdd, 0xc3, 0x23,
	0x8a, 0x29, 0x18, 0x9f, 0xb2, 0x4c, 0x43, 0x8b, 0xb9, 0x38, 0x93, 0x2a, 0xc5, 0xa0, 0x36, 0x59,
	0x9a, 0xfe, 0x43, 0x99, 0xe5, 0x0a, 0x31, 0x43, 0xa8, 0xfb, 0x29, 0x94, 0x68, 0x85, 0x18, 0x25,
	0xcf, 0xbb, 0x92, 0xa2, 0x15, 0xc2, 0x2d, 0x3a, 0xe2, 0x17, 0x35, 0x46, 0xdf, 0xfa, 0xb7, 0x12,
	0x54, 0x22, 0x18, 0x9a, 0x85, 0xbc, 0xdb, 0x17, 0x05, 0x7c, 0xde, 0xed, 0xcb, 0x29, 0x3d, 0xaf,
	0x96, 0x66, 0xf7, 0xa0, 0x41, 0x03, 0xfd, 0x30, 0x2e, 0x1c, 0x0b, 0x0c, 0x5f, 0x67, 0xc0, 0xa8,
	0xde, 0x95, 0x9a, 0x52, 0xbc, 0x45, 0x11, 0x37, 0xa5, 0xd6, 0x00, 0xc6, 0x01, 0x2d, 0x97, 0xcf,
	0xe8, 0x16, 0x4b, 0x6c, 0x6e, 0x95, 0x42, 0x76, 0x28, 0x80, 0x37, 0x37, 0xfc, 0x4b, 0xd7, 0xc1,
	0xbc, 0x55, 0x54, 0x35, 0xe3, 0x31, 0x65, 0xea, 0x12, 0xdb, 0x1b, 0x93, 0x3e, 0xf3, 0xd2, 0x8a,
	0x19, 0x0d, 0xa9, 0xa1, 0x82, 0x6b, 0xe2, 0xf4, 0x88, 0xd7, 0xe7, 0x4d, 0xa2, 0x8a, 0x59, 0xa1,
	0x80, 0x8e, 0xd7, 0x97, 0xac, 0x18, 0x5e, 0xf1, 0x26, 0x51, 0x45, 0x58, 0xf1, 0xf4, 0x2a, 0x40,
	0xf7, 0x61, 0x76, 0x68, 0x05, 0x61, 0x2f, 0xa0, 0xd7, 0x18, 0xd6, 0x63, 0x02, 0xe6, 0x42, 0x75,
	0x0a, 0xed, 0x62, 0xc2, 0x7b, 0x81, 0x11, 0x95, 0x8f, 0x9d, 0x4b, 0x4e, 0x55, 0x4b, 0xa8, 0x4c,
	0xec, 0x5c, 0x32, 0xaa, 0x87, 0x30, 0x27, 0x0a, 0x74, 0x1a, 0x7b, 0x19, 0x59, 0x9d, 0x91, 0xcd,
	0x26, 0x60, 0x46, 0xb8, 0x06, 0xc0, 0xe2, 0x1a, 0x5d, 0x35, 0x6c, 0x36, 0x98, 0xd7, 0x55, 0x19,
	0xa4, 0x4b, 0x75, 0xf0, 0x00, 0x66, 0x39, 0xda, 0xc7, 0x0e, 0x76, 0x2f, 0x71, 0xbf, 0x39, 0xcb,
	0x48, 0x1a, 0x0c, 0x6a, 0x0a, 0xe0, 0xa4, 0xeb, 0xcf, 0xa5, 0x5c, 0x3f, 0x92, 0x7a, 0xe4, 0x92,
	0x33, 0x2e, 0x8e, 0x9e, 0x48, 0x7d, 0xe2, 0x92, 0x33, 0x26, 0xcc, 0x26, 0xe8, 0x09, 0xd5, 0x85,
	0xeb, 0xf8, 0x5e, 0xd0, 0x9c, 0xe7, 0x62, 0x47, 0x74, 0x47, 0x0c, 0x4a, 0xf7, 0x17, 0xb7, 0x2e,
	0xc5, 0x81, 0x44, 0xcc, 0x61, 0x66, 0x23, 0xb0, 0x38, 0x94, 0x0f, 0x60, 0x36, 0x0a, 0x58, 0x82,
	0x6e, 0x41, 0xf4, 0xe6, 0x38, 0x34, 0xb9, 0x1d, 0xda, 0x16, 0xe9, 0x05, 0x8e, 0xe7, 0xe3, 0xe6,
	0x22, 0xbf, 0x1d, 0xda, 0x16, 0xe9, 0xd2, 0x31, 0xd5, 0xd1, 0x00, 0xe3, 0xde, 0x80, 0x35, 0x7e,
	0x9a, 0x4b, 0xbc, 0x3b, 0x3b, 0xc0, 0x98, 0x77, 0x82, 0x8c, 0x3d, 0x96, 0xfe, 0x4c, 0xeb, 0xed,
	0xaf, 0x29, 0xd4, 0x8c, 0x8f, 0x59, 0xc1, 0x93, 0x70, 0x11, 0x47, 0x6a, 0x51, 0x2e, 0xbf, 0xea,
	0x6a, 0xbd, 0x65, 0x5a, 0x6f, 0xd5, 0xbc, 0x6d, 0x3c, 0x63, 0x31, 0x52, 0x86, 0x0b, 0x36, 0xc6,
	0x44, 0x76, 0xe5, 0x69, 0x58, 0xcd, 0xa0, 0x9c, 0x69, 0xf7, 0x3a, 0x08, 0xf1, 0x85, 0x1c, 0x5f,
	0xff, 0xae, 0xc0, 0xb8, 0xca, 0x08, 0xc1, 0x55, 0x3a, 0x5a, 0x9a, 0x7a, 0xb4, 0x1e, 0x81, 0xce,
	0xde, 0x56, 0x1c, 0x6f, 0xd8, 0x93, 0x5b, 0xc2, 0x0d, 0x73, 0x2e, 0x82, 0x7f, 0x27, 0x48, 0xb7,
	0x60, 0x21, 0xb2, 0x10, 0xf3, 0xa1, 0x0b, 0x77, 0x38, 0x74, 0x03, 0x11, 0x3e, 0xe7, 0x05, 0x8a,
	0xba, 0xc7, 0x11, 0x43, 0xd0, 0xdb, 0x9e, 0x3f, 0x26, 0x24, 0x76, 0x24, 0xde, 0xf2, 0xae, 0x09,
	0x18, 0xf3, 0xa3, 0xc7, 0xb0, 0x18, 0x7a, 0xa1, 0x35, 0xec, 0x4d, 0xf8, 0x2e, 0x0f, 0xaa, 0x88,
	0xe1, 0x76, 0x15, 0x07, 0xde, 0x04, 0x5d, 0x9e, 0xc1, 0x0e, 0x43, 0x99, 0x51, 0xcf, 0x26, 0xd4,
	0xec, 0x44, 0x2c, 0x42, 0x69, 0xe4, 0x7b, 0x57, 0xd7, 0x22, 0x3b, 0xf1, 0x01, 0x75, 0x33, 0x62,
	0xf7, 0x92, 0xb3, 0x15, 0x88, 0x67, 0x8e, 0x06, 0xb1, 0xdb, 0x09, 0x90, 0x16, 0x12, 0xe1, 0x55,
	0x8f, 0x77, 0x27, 0xf9, 0xf1, 0x9f, 0x09, 0xaf, 0x0e, 0x59, 0x7f, 0x92, 0x3f, 0x01, 0xf8, 0x02,
	0x09, 0x3c, 0xde, 0x52, 0x08, 0x43, 0x1b, 0x1f, 0x33, 0x1b, 0xc8, 0xe5, 0x8f, 0xf0, 0xb3, 0x8c,
	0x0e, 0xa9, 0x71, 0xcc, 0x12, 0xa2, 0x42, 0x1c, 0xdf, 0xd9, 0x7e, 0xc9, 0xfb, 0x84, 0xf1, 0x15,
	0xac, 0x72, 0xbf, 0xca, 0xe2, 0xb9, 0x91, 0xe6, 0x39, 0xd1, 0xe4, 0x3a, 0x86, 0x79, 0x13, 0x5f,
	0x78, 0x97, 0x98, 0x06, 0xc1, 0x0f, 0xe8, 0x8e, 0xac, 0xa8, 0xad, 0x8a, 0x46, 0xd4, 0xa8, 0x30,
	0x16, 0x01, 0xc9, 0x0c, 0x45, 0xfb, 0xa1, 0x0d, 0x0b, 0x26, 0x0e, 0x1c, 0x8b, 0xa8, 0xcd, 0x87,
	0x4f, 0xa0, 0x1c, 0x77, 0x1e, 0x0a, 0x53, 0x0f, 0xa2, 0xa0, 0x31, 0xfe, 0x55, 0x83, 0x95, 0xae,
	0x63, 0x91, 0xac, 0x26, 0xc1, 0x13, 0xa8, 0xb1, 0xf0, 0xd2, 0x93, 0x6f, 0x44, 0xd9, 0xec, 0x80,
	0x11, 0xf2, 0x37, 0xb4, 0xcf, 0x01, 0x82, 0xd0, 0x1b, 0xf5, 0xe4, 0xa6, 0x65, 0xf6, 0xac, 0x2a,
	0xa5, 0xe3, 0x93, 0x3e, 0x83, 0xb2, 0x08, 0x38, 0xbc, 0xd1, 0x96, 0xf5, 0x62, 0xc2, 0x03, 0x90,
	0x29, 0x08, 0x0d, 0x1f, 0x96, 0x27, 0x25, 0x7f, 0x35, 0xea, 0xd3, 0xea, 0x61, 0xb2, 0x3d, 0xab,
	0xa5, 0x9f, 0x1e, 0x9e, 0xa4, 0x5b, 0x95, 0xef, 0xe3, 0x19, 0x7f, 0x05, 0xab, 0x74, 0x4d, 0xd5,
	0x35, 0x3e, 0x60, 0xd9, 0x9b, 0x3b, 0xa4, 0xd7, 0xb0, 0xda, 0xc5, 0x96, 0xef, 0x9c, 0x7f, 0x58,
	0xdb, 0x06, 0x41, 0x31, 0xee, 0xd9, 0x94, 0x4c, 0xf6, 0x4d, 0xcf, 0xee, 0xd0, 0xbd, 0x70, 0xa3,
	0x07, 0x34, 0x3e, 0xa0, 0x3c, 0x30, 0x71, 0xbc, 0x3e, 0xee, 0x8b, 0xc6, 0x76, 0x34, 0x34, 0x3c,
	0x68, 0x65, 0x2d, 0x1d, 0x57, 0x3b, 0xf5, 0xf7, 0xed, 0xdb, 0x28, 0x84, 0xf2, 0x82, 0xbc, 0xe1,
	0x11, 0x2f, 0xf8, 0x73, 0x01, 0x16, 0xbb, 0x38, 0xdc, 0xc3, 0xf6, 0xf8, 0xec, 0x25, 0xbe, 0xc4,
	0xf1, 0x85, 0xec, 0x2b, 0x28, 0x0d, 0xe9, 0x58, 0x94, 0xb0, 0x0f, 0xa3, 0x45, 0xb2, 0x88, 0xb7,
	0x24, 0x08, 0x9f, 0x85, 0xf6, 0xa0, 0x1a, 0x8c, 0xed, 0x80, 0x45, 0x70, 0xa6, 0x91, 0xd9, 0xed,
	0x8f, 0xde, 0xc9, 0xa2, 0x1b, 0x51, 0x9b, 0xc9, 0x44, 0xe3, 0x18, 0x20, 0xa1, 0x44, 0x55, 0x28,
	0x9d, 0x9a, 0x3b, 0xed, 0x7d, 0x3d, 0x47, 0x3f, 0xf7, 0xf6, 0x77, 0x5f, 0xbd, 0xd0, 0x35, 0x54,
	0x81, 0xe2, 0x61, 0xe7, 0xf9, 0xb1, 0x9e, 0xa7, 0x5f, 0xaf, 0x77, 0xcc, 0x8e, 0x5e, 0xa0, 0xe8,
	0x7d, 0xd3, 0x3c, 0x36, 0xf5, 0x22, 0xad, 0x40, 0xdb, 0xe6, 0xe1, 0xe9, 0x61, 0x7b, 0xe7, 0xa5,
	0x5e, 0x32, 0xfe, 0x45, 0x83, 0x6a, 0xbc, 0x12, 0x9a, 0x81, 0xc2, 0xce, 0xcb, 0x97, 0x7a, 0x8e,
	0xce, 0xdc, 0xd9, 0xfb, 0xde, 0xe4, 0xdc, 0x76, 0x8e, 0x5e, 0x98, 0x9c, 0x5b, 0x9b, 0x7e, 0x15,
	0xe8, 0xd7, 0x6e, 0x7b, 0x6f, 0x57, 0x2f, 0xb2, 0xaf, 0xd3, 0xf6, 0x9e, 0x5e, 0x62, 0xd8, 0x83,
	0x9d, 0x8e, 0x5e, 0xa6, 0x5f, 0x7b, 0x87, 0xdd, 0xb6, 0x3e, 0xc3, 0x25, 0xd9, 0xfb, 0x5e, 0xaf,
	0xd0, 0xaf, 0xa3, 0xc3, 0x8e, 0xa9, 0x57, 0xe9, 0xd7, 0xc9, 0xfe, 0xbe, 0xa9, 0x03, 0xfd, 0x32,
	0x4f, 0xda, 0x5d, 0xbd, 0x46, 0xbf, 0xba, 0x6d, 0xf3, 0x44, 0xaf, 0xb3, 0x2f, 0xf3, 0x3b, 0x53,
	0x6f, 0xb0, 0xaf, 0x1f, 0x3a, 0x6d, 0x7d, 0x96, 0x7e, 0x9d, 0x7e, 0x7f, 0x74, 0xa2, 0xcf, 0xd1,
	0xfb, 0xc7, 0x84, 0xaa, 0x44, 0xd8, 0xb9, 0x04, 0xd4, 0x4d, 0x3a, 0x01, 0x91, 0xc5, 0x7e, 0x45,
	0x13, 0x20, 0xdd, 0x10, 0x2d, 0x64, 0x35, 0x44, 0x97, 0x60, 0x41, 0x59, 0x57, 0x88, 0xb3, 0x00,
	0xf3, 0xdd, 0xd0, 0x1b, 0xed, 0x59, 0xf8, 0x22, 0xce, 0x12, 0x34, 0x60, 0xca, 0x40, 0x41, 0xfa,
	0xc7, 0xd0, 0xec, 0x8e, 0xed, 0x0b, 0x37, 0x2b, 0xaf, 0xdc, 0x1c, 0xd5, 0x3f, 0x85, 0xd5, 0x8c,
	0xd9, 0xe2, 0x70, 0x64, 0xa5, 0xa5, 0x3f, 0x00, 0xc4, 0x27, 0x28, 0x85, 0x52, 0x76, 0x85, 0xf3,
	0x08, 0x16, 0x14, 0xda, 0x77, 0xb0, 0x6d, 0xc2, 0x32, 0x75, 0x22, 0xc7, 0x77, 0x6d, 0xb5, 0xed,
	0x6c, 0xfc, 0x87, 0x06, 0xb7, 0x63, 0x54, 0x56, 0xf8, 0x78, 0xca, 0xcf, 0x05, 0xc3, 0x8b, 0x70,
	0xfe, 0x8e, 0x38, 0x9b, 0xd0, 0xa2, 0x67, 0x50, 0x1b, 0x93, 0x64, 0x6a, 0xfe, 0xa6, 0xa9, 0x32,
	0x35, 0x2d, 0x5e, 0x5d, 0xe2, 0x0c, 0xc7, 0x7d, 0xdc, 0xbb, 0xe0, 0x75, 0x9a, 0x68, 0xb6, 0xcf,
	0x0a, 0xb0, 0xa8, 0xde, 0xb6, 0xff, 0x1f, 0x41, 0xd1, 0x0e, 0x9d, 0x3e, 0xea, 0x40, 0x43, 0xa9,
	0xc0, 0xd0, 0x6d, 0xe9, 0x6a, 0x95, 0xaa, 0xd8, 0x5a, 0x6b, 0x53, 0xb0, 0xc2, 0xec, 0x39, 0xca,
	0x4f, 0xf1, 0xe5, 0x84, 0x5f, 0x56, 0x34, 0x48, 0xf8, 0x65, 0x1f, 0x80, 0x1c, 0xda, 0x07, 0x48,
	0xdc, 0x0b, 0xc5, 0x7a, 0x48, 0xf9, 0x61, 0xab, 0x95, 0x85, 0x8a, 0xd9, 0xfc, 0x19, 0xcc, 0xaa,
	0x77, 0x72, 0xb4, 0x36, 0xed, 0xae, 0xce, 0xd9, 0xdd, 0x79, 0xf7, 0x55, 0xde, 0xc8, 0x21, 0x0f,
	0x9a, 0xd3, 0x5e, 0x76, 0x50, 0x1c, 0x45, 0x6f, 0x78, 0x5a, 0x6a, 0x6d, 0xde, 0x4c, 0x38, 0xb1,
	0x07, 0xa9, 0xdd, 0xa4, 0xec, 0x21, 0xdd, 0x9f, 0x52, 0xf6, 0x90, 0xd1, 0xa5, 0xe2, 0xda, 0x4d,
	0x70, 0x89, 0x76, 0x53, 0x6d, 0xbb, 0x44, 0xbb, 0xe9, 0x76, 0x1c, 0x37, 0xba, 0x72, 0x39, 0x50,
	0x9c, 0x28, 0x75, 0x97, 0x50, 0x9c, 0x28, 0x7d, 0xa3, 0x30, 0x72, 0xe8, 0x35, 0xef, 0x16, 0xcb,
	0x0d, 0x6e, 0xb4, 0x2e, 0x4d, 0xca, 0xea, 0x8a, 0xb7, 0x36, 0xa6, 0x13, 0xc4, 0x8c, 0xff, 0x14,
	0xea, 0x72, 0xd3, 0x16, 0xdd, 0x92, 0xe7, 0x4c, 0x32, 0xbc, 0x9d, 0x8d, 0x8c, 0x99, 0xfd, 0x09,
	0x54, 0x22, 0x0c, 0x5a, 0x99, 0xa4, 0x8d, 0x98, 0x34, 0xd3, 0x88, 0x98, 0xc1, 0x01, 0xd4, 0xa4,
	0x8b, 0x19, 0x6a, 0xa9, 0x6a, 0x51, 0xd8, 0xdc, 0xca, 0xc4, 0xc9, 0x9c, 0xa4, 0x98, 0x96, 0x70,
	0x4a, 0x07, 0xc5, 0x84, 0x53, 0x46, 0x10, 0x8c, 0x9d, 0x4c, 0x7e, 0xa5, 0x95, 0xad, 0x95, 0x8e,
	0xe6, 0x8a, 0x93, 0x65, 0x84, 0x6b, 0x66, 0xcd, 0xf9, 0x54, 0x89, 0x7f, 0x13, 0xd7, 0xbb, 0xea,
	0x7e, 0xa7, 0x31, 0xd6, 0x27, 0xab, 0xd2, 0xc4, 0x4d, 0xa6, 0x54, 0xda, 0x89, 0xbc, 0xd9, 0x05,
	0xad, 0x91, 0x7b, 0xac, 0xa1, 0x1f, 0x61, 0x21, 0xa3, 0xf4, 0xbc, 0x99, 0xf7, 0x5d, 0x99, 0x20,
	0xb3, 0x70, 0x65, 0xec, 0xff, 0x1c, 0xe6, 0x53, 0xe9, 0x0d, 0x6d, 0xa8, 0x76, 0x79, 0x97, 0x4e,
	0xa6, 0xe6, 0x46, 0x23, 0x87, 0x5c, 0x76, 0x41, 0xcb, 0x78, 0x5c, 0x43, 0x0f, 0x24, 0x95, 0x4e,
	0x7f, 0xae, 0x6c, 0x7d, 0x74, 0x13, 0x99, 0x14, 0x00, 0x57, 0xa7, 0x3e, 0xe5, 0xbd, 0xef, 0x6a,
	0x8f, 0x54, 0x3b, 0xdf, 0xb4, 0x60, 0x73, 0xda, 0x3b, 0x5b, 0x12, 0x71, 0x6f, 0x78, 0xc6, 0x4b,
	0x22, 0xee, 0x4d, 0x4f, 0x76, 0x46, 0x0e, 0xf5, 0x61, 0x29, 0x33, 0xc9, 0xa3, 0xfb, 0x92, 0x29,
	0xa6, 0xd6, 0x00, 0xad, 0xf5, 0x1b, 0xfe, 0xab, 0x30, 0x72, 0x9b, 0xda, 0x63, 0x0d, 0xfd, 0x35,
	0xab, 0x95, 0x38, 0x9b, 0x49, 0x97, 0x7b, 0xbf, 0x85, 0xe2, 0xbf, 0x75, 0xa6, 0xff, 0x6a, 0x22,
	0xd6, 0x3a, 0x81, 0xb9, 0x89, 0x8a, 0x06, 0xdd, 0x49, 0x2d, 0xa1, 0x94, 0x3a, 0xad, 0xd5, 0xa9,
	0x7f, 0xce, 0x30, 0x67, 0xe6, 0x51, 0x90, 0x35, 0x61, 0x95, 0x28, 0x28, 0x77, 0x7c, 0x95, 0x28,
	0xa8, 0xf4, 0x6b, 0x79, 0xec, 0x92, 0x7e, 0x45, 0x48, 0x62, 0x57, 0xfa, 0xb7, 0x87, 0x24, 0x76,
	0x65, 0xfd, 0xbb, 0xc0, 0x62, 0x97, 0xfa, 0xfb, 0x40, 0x12, 0x65, 0x32, 0xff, 0x6a, 0x48, 0x62,
	0xc1, 0x94, 0xbf, 0x0e, 0xa2, 0xcc, 0x96, 0xbc, 0xb5, 0x28, 0x99, 0x2d, 0xf5, 0x36, 0xa3, 0x64,
	0xb6, 0xf4, 0x03, 0x8d, 0x91, 0xdb, 0xfe, 0xad, 0x06, 0x33, 0x3e, 0x3e, 0x0b, 0x69, 0x89, 0x48,
	0x83, 0x76, 0x52, 0x65, 0x4b, 0x41, 0x3b, 0x55, 0xf2, 0x4b, 0x41, 0x3b, 0xa3, 0x2c, 0xcf, 0xa1,
	0x53, 0xd6, 0x63, 0x97, 0x5f, 0x0c, 0x91, 0x1c, 0x96, 0x33, 0x5e, 0x19, 0x5b, 0xeb, 0x53, 0xf1,
	0x6a, 0x2a, 0x90, 0x7f, 0x8b, 0x90, 0x83, 0x76, 0xc6, 0xbf, 0x18, 0x72, 0x2a, 0xc8, 0xfa, 0x9b,
	0xc2, 0xc8, 0xd9, 0x65, 0xd6, 0xa2, 0xfb, 0xfc, 0x77, 0x01, 0x00, 0x00, 0xff, 0xff, 0x32, 0xde,
	0xc4, 0x15, 0x26, 0x2d, 0x00, 0x00,
}
